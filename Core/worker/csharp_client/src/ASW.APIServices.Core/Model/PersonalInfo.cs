/* 
 * Workers
 *
 * ## Workers and events 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ASW.APIServices.Core.Client.OpenAPIDateConverter;

namespace ASW.APIServices.Core.Model
{
    /// <summary>
    /// PersonalInfo
    /// </summary>
    [DataContract]
    public partial class PersonalInfo :  IEquatable<PersonalInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PersonalInfo" /> class.
        /// </summary>
        /// <param name="maidenName">maidenName.</param>
        /// <param name="maritalStatus">maritalStatus.</param>
        /// <param name="additionalID">additionalID.</param>
        /// <param name="placeOfBirth">placeOfBirth.</param>
        /// <param name="nationality">nationality.</param>
        /// <param name="ethnicOrigin">ethnicOrigin.</param>
        /// <param name="visaRequired">visaRequired.</param>
        /// <param name="disabledNo">disabledNo.</param>
        /// <param name="disability">disability.</param>
        public PersonalInfo(string maidenName = default(string), string maritalStatus = default(string), string additionalID = default(string), string placeOfBirth = default(string), string nationality = default(string), string ethnicOrigin = default(string), string visaRequired = default(string), string disabledNo = default(string), string disability = default(string))
        {
            this.MaidenName = maidenName;
            this.MaritalStatus = maritalStatus;
            this.AdditionalID = additionalID;
            this.PlaceOfBirth = placeOfBirth;
            this.Nationality = nationality;
            this.EthnicOrigin = ethnicOrigin;
            this.VisaRequired = visaRequired;
            this.DisabledNo = disabledNo;
            this.Disability = disability;
        }
        
        /// <summary>
        /// Gets or Sets MaidenName
        /// </summary>
        [DataMember(Name="maidenName", EmitDefaultValue=false)]
        public string MaidenName { get; set; }

        /// <summary>
        /// Gets or Sets MaritalStatus
        /// </summary>
        [DataMember(Name="maritalStatus", EmitDefaultValue=false)]
        public string MaritalStatus { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalID
        /// </summary>
        [DataMember(Name="additionalID", EmitDefaultValue=false)]
        public string AdditionalID { get; set; }

        /// <summary>
        /// Gets or Sets PlaceOfBirth
        /// </summary>
        [DataMember(Name="placeOfBirth", EmitDefaultValue=false)]
        public string PlaceOfBirth { get; set; }

        /// <summary>
        /// Gets or Sets Nationality
        /// </summary>
        [DataMember(Name="nationality", EmitDefaultValue=false)]
        public string Nationality { get; set; }

        /// <summary>
        /// Gets or Sets EthnicOrigin
        /// </summary>
        [DataMember(Name="ethnicOrigin", EmitDefaultValue=false)]
        public string EthnicOrigin { get; set; }

        /// <summary>
        /// Gets or Sets VisaRequired
        /// </summary>
        [DataMember(Name="visaRequired", EmitDefaultValue=false)]
        public string VisaRequired { get; set; }

        /// <summary>
        /// Gets or Sets DisabledNo
        /// </summary>
        [DataMember(Name="disabledNo", EmitDefaultValue=false)]
        public string DisabledNo { get; set; }

        /// <summary>
        /// Gets or Sets Disability
        /// </summary>
        [DataMember(Name="disability", EmitDefaultValue=false)]
        public string Disability { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PersonalInfo {\n");
            sb.Append("  MaidenName: ").Append(MaidenName).Append("\n");
            sb.Append("  MaritalStatus: ").Append(MaritalStatus).Append("\n");
            sb.Append("  AdditionalID: ").Append(AdditionalID).Append("\n");
            sb.Append("  PlaceOfBirth: ").Append(PlaceOfBirth).Append("\n");
            sb.Append("  Nationality: ").Append(Nationality).Append("\n");
            sb.Append("  EthnicOrigin: ").Append(EthnicOrigin).Append("\n");
            sb.Append("  VisaRequired: ").Append(VisaRequired).Append("\n");
            sb.Append("  DisabledNo: ").Append(DisabledNo).Append("\n");
            sb.Append("  Disability: ").Append(Disability).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PersonalInfo);
        }

        /// <summary>
        /// Returns true if PersonalInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of PersonalInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PersonalInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MaidenName == input.MaidenName ||
                    (this.MaidenName != null &&
                    this.MaidenName.Equals(input.MaidenName))
                ) && 
                (
                    this.MaritalStatus == input.MaritalStatus ||
                    (this.MaritalStatus != null &&
                    this.MaritalStatus.Equals(input.MaritalStatus))
                ) && 
                (
                    this.AdditionalID == input.AdditionalID ||
                    (this.AdditionalID != null &&
                    this.AdditionalID.Equals(input.AdditionalID))
                ) && 
                (
                    this.PlaceOfBirth == input.PlaceOfBirth ||
                    (this.PlaceOfBirth != null &&
                    this.PlaceOfBirth.Equals(input.PlaceOfBirth))
                ) && 
                (
                    this.Nationality == input.Nationality ||
                    (this.Nationality != null &&
                    this.Nationality.Equals(input.Nationality))
                ) && 
                (
                    this.EthnicOrigin == input.EthnicOrigin ||
                    (this.EthnicOrigin != null &&
                    this.EthnicOrigin.Equals(input.EthnicOrigin))
                ) && 
                (
                    this.VisaRequired == input.VisaRequired ||
                    (this.VisaRequired != null &&
                    this.VisaRequired.Equals(input.VisaRequired))
                ) && 
                (
                    this.DisabledNo == input.DisabledNo ||
                    (this.DisabledNo != null &&
                    this.DisabledNo.Equals(input.DisabledNo))
                ) && 
                (
                    this.Disability == input.Disability ||
                    (this.Disability != null &&
                    this.Disability.Equals(input.Disability))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MaidenName != null)
                    hashCode = hashCode * 59 + this.MaidenName.GetHashCode();
                if (this.MaritalStatus != null)
                    hashCode = hashCode * 59 + this.MaritalStatus.GetHashCode();
                if (this.AdditionalID != null)
                    hashCode = hashCode * 59 + this.AdditionalID.GetHashCode();
                if (this.PlaceOfBirth != null)
                    hashCode = hashCode * 59 + this.PlaceOfBirth.GetHashCode();
                if (this.Nationality != null)
                    hashCode = hashCode * 59 + this.Nationality.GetHashCode();
                if (this.EthnicOrigin != null)
                    hashCode = hashCode * 59 + this.EthnicOrigin.GetHashCode();
                if (this.VisaRequired != null)
                    hashCode = hashCode * 59 + this.VisaRequired.GetHashCode();
                if (this.DisabledNo != null)
                    hashCode = hashCode * 59 + this.DisabledNo.GetHashCode();
                if (this.Disability != null)
                    hashCode = hashCode * 59 + this.Disability.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
