# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from api_server.models.base_model_ import Model
from api_server import util


class WorkerPerformanceEventEvaluationQuesions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, question: str=None, answer: str=None):
        """WorkerPerformanceEventEvaluationQuesions - a model defined in OpenAPI

        :param question: The question of this WorkerPerformanceEventEvaluationQuesions.
        :param answer: The answer of this WorkerPerformanceEventEvaluationQuesions.
        """
        self.openapi_types = {
            'question': str,
            'answer': str
        }

        self.attribute_map = {
            'question': 'question',
            'answer': 'answer'
        }

        self._question = question
        self._answer = answer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkerPerformanceEventEvaluationQuesions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkerPerformanceEvent_evaluation_quesions of this WorkerPerformanceEventEvaluationQuesions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def question(self):
        """Gets the question of this WorkerPerformanceEventEvaluationQuesions.


        :return: The question of this WorkerPerformanceEventEvaluationQuesions.
        :rtype: str
        """
        return self._question

    @question.setter
    def question(self, question):
        """Sets the question of this WorkerPerformanceEventEvaluationQuesions.


        :param question: The question of this WorkerPerformanceEventEvaluationQuesions.
        :type question: str
        """

        self._question = question

    @property
    def answer(self):
        """Gets the answer of this WorkerPerformanceEventEvaluationQuesions.


        :return: The answer of this WorkerPerformanceEventEvaluationQuesions.
        :rtype: str
        """
        return self._answer

    @answer.setter
    def answer(self, answer):
        """Sets the answer of this WorkerPerformanceEventEvaluationQuesions.


        :param answer: The answer of this WorkerPerformanceEventEvaluationQuesions.
        :type answer: str
        """

        self._answer = answer
