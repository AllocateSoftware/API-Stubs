# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from api_server.models.base_model_ import Model
from api_server.models.worker_performance_event_duty_details import WorkerPerformanceEventDutyDetails
from api_server.models.worker_performance_event_evaluation import WorkerPerformanceEventEvaluation
from api_server.models.worker_performance_event_worker import WorkerPerformanceEventWorker
from api_server import util


class WorkerPerformanceEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, worker: WorkerPerformanceEventWorker=None, duty_details: WorkerPerformanceEventDutyDetails=None, evaluation: WorkerPerformanceEventEvaluation=None):
        """WorkerPerformanceEvent - a model defined in OpenAPI

        :param worker: The worker of this WorkerPerformanceEvent.
        :param duty_details: The duty_details of this WorkerPerformanceEvent.
        :param evaluation: The evaluation of this WorkerPerformanceEvent.
        """
        self.openapi_types = {
            'worker': WorkerPerformanceEventWorker,
            'duty_details': WorkerPerformanceEventDutyDetails,
            'evaluation': WorkerPerformanceEventEvaluation
        }

        self.attribute_map = {
            'worker': 'worker',
            'duty_details': 'dutyDetails',
            'evaluation': 'evaluation'
        }

        self._worker = worker
        self._duty_details = duty_details
        self._evaluation = evaluation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkerPerformanceEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkerPerformanceEvent of this WorkerPerformanceEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def worker(self):
        """Gets the worker of this WorkerPerformanceEvent.


        :return: The worker of this WorkerPerformanceEvent.
        :rtype: WorkerPerformanceEventWorker
        """
        return self._worker

    @worker.setter
    def worker(self, worker):
        """Sets the worker of this WorkerPerformanceEvent.


        :param worker: The worker of this WorkerPerformanceEvent.
        :type worker: WorkerPerformanceEventWorker
        """

        self._worker = worker

    @property
    def duty_details(self):
        """Gets the duty_details of this WorkerPerformanceEvent.


        :return: The duty_details of this WorkerPerformanceEvent.
        :rtype: WorkerPerformanceEventDutyDetails
        """
        return self._duty_details

    @duty_details.setter
    def duty_details(self, duty_details):
        """Sets the duty_details of this WorkerPerformanceEvent.


        :param duty_details: The duty_details of this WorkerPerformanceEvent.
        :type duty_details: WorkerPerformanceEventDutyDetails
        """

        self._duty_details = duty_details

    @property
    def evaluation(self):
        """Gets the evaluation of this WorkerPerformanceEvent.


        :return: The evaluation of this WorkerPerformanceEvent.
        :rtype: WorkerPerformanceEventEvaluation
        """
        return self._evaluation

    @evaluation.setter
    def evaluation(self, evaluation):
        """Sets the evaluation of this WorkerPerformanceEvent.


        :param evaluation: The evaluation of this WorkerPerformanceEvent.
        :type evaluation: WorkerPerformanceEventEvaluation
        """

        self._evaluation = evaluation
