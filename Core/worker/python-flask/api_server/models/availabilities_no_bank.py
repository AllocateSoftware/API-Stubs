# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api_server.models.base_model_ import Model
from api_server import util


class AvailabilitiesNoBank(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, start=None, number_of_occurances=None, notes=None):  # noqa: E501
        """AvailabilitiesNoBank - a model defined in OpenAPI

        :param start: The start of this AvailabilitiesNoBank.  # noqa: E501
        :type start: str
        :param number_of_occurances: The number_of_occurances of this AvailabilitiesNoBank.  # noqa: E501
        :type number_of_occurances: float
        :param notes: The notes of this AvailabilitiesNoBank.  # noqa: E501
        :type notes: str
        """
        self.openapi_types = {
            'start': str,
            'number_of_occurances': float,
            'notes': str
        }

        self.attribute_map = {
            'start': 'start',
            'number_of_occurances': 'numberOfOccurances',
            'notes': 'notes'
        }

        self._start = start
        self._number_of_occurances = number_of_occurances
        self._notes = notes

    @classmethod
    def from_dict(cls, dikt) -> 'AvailabilitiesNoBank':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Availabilities_NoBank of this AvailabilitiesNoBank.  # noqa: E501
        :rtype: AvailabilitiesNoBank
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start(self):
        """Gets the start of this AvailabilitiesNoBank.


        :return: The start of this AvailabilitiesNoBank.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this AvailabilitiesNoBank.


        :param start: The start of this AvailabilitiesNoBank.
        :type start: str
        """

        self._start = start

    @property
    def number_of_occurances(self):
        """Gets the number_of_occurances of this AvailabilitiesNoBank.


        :return: The number_of_occurances of this AvailabilitiesNoBank.
        :rtype: float
        """
        return self._number_of_occurances

    @number_of_occurances.setter
    def number_of_occurances(self, number_of_occurances):
        """Sets the number_of_occurances of this AvailabilitiesNoBank.


        :param number_of_occurances: The number_of_occurances of this AvailabilitiesNoBank.
        :type number_of_occurances: float
        """

        self._number_of_occurances = number_of_occurances

    @property
    def notes(self):
        """Gets the notes of this AvailabilitiesNoBank.


        :return: The notes of this AvailabilitiesNoBank.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this AvailabilitiesNoBank.


        :param notes: The notes of this AvailabilitiesNoBank.
        :type notes: str
        """

        self._notes = notes
