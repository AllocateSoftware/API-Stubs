# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api_server.models.base_model_ import Model
from api_server import util


class PersonalPatternDuty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shift_group=None, shift=None, roster_location=None, team=None, activity_category=None, activity_benchmark=None, activity_type=None, activity_profile=None, work=None, start=None, end=None, monthly_reccurrance=None):  # noqa: E501
        """PersonalPatternDuty - a model defined in OpenAPI

        :param shift_group: The shift_group of this PersonalPatternDuty.  # noqa: E501
        :type shift_group: str
        :param shift: The shift of this PersonalPatternDuty.  # noqa: E501
        :type shift: str
        :param roster_location: The roster_location of this PersonalPatternDuty.  # noqa: E501
        :type roster_location: str
        :param team: The team of this PersonalPatternDuty.  # noqa: E501
        :type team: str
        :param activity_category: The activity_category of this PersonalPatternDuty.  # noqa: E501
        :type activity_category: str
        :param activity_benchmark: The activity_benchmark of this PersonalPatternDuty.  # noqa: E501
        :type activity_benchmark: str
        :param activity_type: The activity_type of this PersonalPatternDuty.  # noqa: E501
        :type activity_type: str
        :param activity_profile: The activity_profile of this PersonalPatternDuty.  # noqa: E501
        :type activity_profile: str
        :param work: The work of this PersonalPatternDuty.  # noqa: E501
        :type work: str
        :param start: The start of this PersonalPatternDuty.  # noqa: E501
        :type start: str
        :param end: The end of this PersonalPatternDuty.  # noqa: E501
        :type end: str
        :param monthly_reccurrance: The monthly_reccurrance of this PersonalPatternDuty.  # noqa: E501
        :type monthly_reccurrance: bool
        """
        self.openapi_types = {
            'shift_group': str,
            'shift': str,
            'roster_location': str,
            'team': str,
            'activity_category': str,
            'activity_benchmark': str,
            'activity_type': str,
            'activity_profile': str,
            'work': str,
            'start': str,
            'end': str,
            'monthly_reccurrance': bool
        }

        self.attribute_map = {
            'shift_group': 'shiftGroup',
            'shift': 'shift',
            'roster_location': 'rosterLocation',
            'team': 'team',
            'activity_category': 'activityCategory',
            'activity_benchmark': 'activityBenchmark',
            'activity_type': 'activityType',
            'activity_profile': 'activityProfile',
            'work': 'work',
            'start': 'start',
            'end': 'end',
            'monthly_reccurrance': 'monthlyReccurrance'
        }

        self._shift_group = shift_group
        self._shift = shift
        self._roster_location = roster_location
        self._team = team
        self._activity_category = activity_category
        self._activity_benchmark = activity_benchmark
        self._activity_type = activity_type
        self._activity_profile = activity_profile
        self._work = work
        self._start = start
        self._end = end
        self._monthly_reccurrance = monthly_reccurrance

    @classmethod
    def from_dict(cls, dikt) -> 'PersonalPatternDuty':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PersonalPattern_duty of this PersonalPatternDuty.  # noqa: E501
        :rtype: PersonalPatternDuty
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shift_group(self):
        """Gets the shift_group of this PersonalPatternDuty.


        :return: The shift_group of this PersonalPatternDuty.
        :rtype: str
        """
        return self._shift_group

    @shift_group.setter
    def shift_group(self, shift_group):
        """Sets the shift_group of this PersonalPatternDuty.


        :param shift_group: The shift_group of this PersonalPatternDuty.
        :type shift_group: str
        """

        self._shift_group = shift_group

    @property
    def shift(self):
        """Gets the shift of this PersonalPatternDuty.


        :return: The shift of this PersonalPatternDuty.
        :rtype: str
        """
        return self._shift

    @shift.setter
    def shift(self, shift):
        """Sets the shift of this PersonalPatternDuty.


        :param shift: The shift of this PersonalPatternDuty.
        :type shift: str
        """

        self._shift = shift

    @property
    def roster_location(self):
        """Gets the roster_location of this PersonalPatternDuty.


        :return: The roster_location of this PersonalPatternDuty.
        :rtype: str
        """
        return self._roster_location

    @roster_location.setter
    def roster_location(self, roster_location):
        """Sets the roster_location of this PersonalPatternDuty.


        :param roster_location: The roster_location of this PersonalPatternDuty.
        :type roster_location: str
        """

        self._roster_location = roster_location

    @property
    def team(self):
        """Gets the team of this PersonalPatternDuty.


        :return: The team of this PersonalPatternDuty.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this PersonalPatternDuty.


        :param team: The team of this PersonalPatternDuty.
        :type team: str
        """

        self._team = team

    @property
    def activity_category(self):
        """Gets the activity_category of this PersonalPatternDuty.


        :return: The activity_category of this PersonalPatternDuty.
        :rtype: str
        """
        return self._activity_category

    @activity_category.setter
    def activity_category(self, activity_category):
        """Sets the activity_category of this PersonalPatternDuty.


        :param activity_category: The activity_category of this PersonalPatternDuty.
        :type activity_category: str
        """

        self._activity_category = activity_category

    @property
    def activity_benchmark(self):
        """Gets the activity_benchmark of this PersonalPatternDuty.


        :return: The activity_benchmark of this PersonalPatternDuty.
        :rtype: str
        """
        return self._activity_benchmark

    @activity_benchmark.setter
    def activity_benchmark(self, activity_benchmark):
        """Sets the activity_benchmark of this PersonalPatternDuty.


        :param activity_benchmark: The activity_benchmark of this PersonalPatternDuty.
        :type activity_benchmark: str
        """

        self._activity_benchmark = activity_benchmark

    @property
    def activity_type(self):
        """Gets the activity_type of this PersonalPatternDuty.


        :return: The activity_type of this PersonalPatternDuty.
        :rtype: str
        """
        return self._activity_type

    @activity_type.setter
    def activity_type(self, activity_type):
        """Sets the activity_type of this PersonalPatternDuty.


        :param activity_type: The activity_type of this PersonalPatternDuty.
        :type activity_type: str
        """

        self._activity_type = activity_type

    @property
    def activity_profile(self):
        """Gets the activity_profile of this PersonalPatternDuty.


        :return: The activity_profile of this PersonalPatternDuty.
        :rtype: str
        """
        return self._activity_profile

    @activity_profile.setter
    def activity_profile(self, activity_profile):
        """Sets the activity_profile of this PersonalPatternDuty.


        :param activity_profile: The activity_profile of this PersonalPatternDuty.
        :type activity_profile: str
        """

        self._activity_profile = activity_profile

    @property
    def work(self):
        """Gets the work of this PersonalPatternDuty.


        :return: The work of this PersonalPatternDuty.
        :rtype: str
        """
        return self._work

    @work.setter
    def work(self, work):
        """Sets the work of this PersonalPatternDuty.


        :param work: The work of this PersonalPatternDuty.
        :type work: str
        """

        self._work = work

    @property
    def start(self):
        """Gets the start of this PersonalPatternDuty.


        :return: The start of this PersonalPatternDuty.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this PersonalPatternDuty.


        :param start: The start of this PersonalPatternDuty.
        :type start: str
        """

        self._start = start

    @property
    def end(self):
        """Gets the end of this PersonalPatternDuty.


        :return: The end of this PersonalPatternDuty.
        :rtype: str
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this PersonalPatternDuty.


        :param end: The end of this PersonalPatternDuty.
        :type end: str
        """

        self._end = end

    @property
    def monthly_reccurrance(self):
        """Gets the monthly_reccurrance of this PersonalPatternDuty.


        :return: The monthly_reccurrance of this PersonalPatternDuty.
        :rtype: bool
        """
        return self._monthly_reccurrance

    @monthly_reccurrance.setter
    def monthly_reccurrance(self, monthly_reccurrance):
        """Sets the monthly_reccurrance of this PersonalPatternDuty.


        :param monthly_reccurrance: The monthly_reccurrance of this PersonalPatternDuty.
        :type monthly_reccurrance: bool
        """

        self._monthly_reccurrance = monthly_reccurrance
