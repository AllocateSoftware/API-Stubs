# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api_server.models.base_model_ import Model
from api_server import util


class WorkerRegistrationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, person_id=None):  # noqa: E501
        """WorkerRegistrationResponse - a model defined in OpenAPI

        :param person_id: The person_id of this WorkerRegistrationResponse.  # noqa: E501
        :type person_id: str
        """
        self.openapi_types = {
            'person_id': str
        }

        self.attribute_map = {
            'person_id': 'personId'
        }

        self._person_id = person_id

    @classmethod
    def from_dict(cls, dikt) -> 'WorkerRegistrationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WorkerRegistrationResponse of this WorkerRegistrationResponse.  # noqa: E501
        :rtype: WorkerRegistrationResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def person_id(self):
        """Gets the person_id of this WorkerRegistrationResponse.

        ASWid of the person  # noqa: E501

        :return: The person_id of this WorkerRegistrationResponse.
        :rtype: str
        """
        return self._person_id

    @person_id.setter
    def person_id(self, person_id):
        """Sets the person_id of this WorkerRegistrationResponse.

        ASWid of the person  # noqa: E501

        :param person_id: The person_id of this WorkerRegistrationResponse.
        :type person_id: str
        """
        if person_id is None:
            raise ValueError("Invalid value for `person_id`, must not be `None`")  # noqa: E501

        self._person_id = person_id
