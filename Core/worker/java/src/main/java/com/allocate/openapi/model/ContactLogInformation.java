/*
 * Workers
 * ## Workers and events 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.allocate.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.allocate.openapi.model.ContactLogInformationDetails;
import com.allocate.openapi.model.Identifier;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * ContactLogInformation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-09T13:36:44.017277Z[Europe/London]")
public class ContactLogInformation {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    TELEPHONE("telephone"),
    
    EMAIL("email"),
    
    IM("IM"),
    
    FACETOFACE("faceToFace");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_WHEN = "when";
  @SerializedName(SERIALIZED_NAME_WHEN)
  private OffsetDateTime when;

  public static final String SERIALIZED_NAME_WHO = "who";
  @SerializedName(SERIALIZED_NAME_WHO)
  private Map<String, Identifier> who = null;

  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private ContactLogInformationDetails details;


  public ContactLogInformation type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ContactLogInformation when(OffsetDateTime when) {
    
    this.when = when;
    return this;
  }

   /**
   * Get when
   * @return when
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getWhen() {
    return when;
  }


  public void setWhen(OffsetDateTime when) {
    this.when = when;
  }


  public ContactLogInformation who(Map<String, Identifier> who) {
    
    this.who = who;
    return this;
  }

  public ContactLogInformation putWhoItem(String key, Identifier whoItem) {
    if (this.who == null) {
      this.who = new HashMap<String, Identifier>();
    }
    this.who.put(key, whoItem);
    return this;
  }

   /**
   * Get who
   * @return who
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Identifier> getWho() {
    return who;
  }


  public void setWho(Map<String, Identifier> who) {
    this.who = who;
  }


  public ContactLogInformation details(ContactLogInformationDetails details) {
    
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ContactLogInformationDetails getDetails() {
    return details;
  }


  public void setDetails(ContactLogInformationDetails details) {
    this.details = details;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactLogInformation contactLogInformation = (ContactLogInformation) o;
    return Objects.equals(this.type, contactLogInformation.type) &&
        Objects.equals(this.when, contactLogInformation.when) &&
        Objects.equals(this.who, contactLogInformation.who) &&
        Objects.equals(this.details, contactLogInformation.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, when, who, details);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactLogInformation {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    when: ").append(toIndentedString(when)).append("\n");
    sb.append("    who: ").append(toIndentedString(who)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

