/*
 * Workers
 * ## Workers and events 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.allocate.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.allocate.openapi.model.WorkerPerformanceEventDutyDetails;
import com.allocate.openapi.model.WorkerPerformanceEventEvaluation;
import com.allocate.openapi.model.WorkerPerformanceEventWorker;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * WorkerPerformanceEvent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-09T13:36:44.017277Z[Europe/London]")
public class WorkerPerformanceEvent {
  public static final String SERIALIZED_NAME_WORKER = "worker";
  @SerializedName(SERIALIZED_NAME_WORKER)
  private WorkerPerformanceEventWorker worker;

  public static final String SERIALIZED_NAME_DUTY_DETAILS = "dutyDetails";
  @SerializedName(SERIALIZED_NAME_DUTY_DETAILS)
  private WorkerPerformanceEventDutyDetails dutyDetails;

  public static final String SERIALIZED_NAME_EVALUATION = "evaluation";
  @SerializedName(SERIALIZED_NAME_EVALUATION)
  private WorkerPerformanceEventEvaluation evaluation;


  public WorkerPerformanceEvent worker(WorkerPerformanceEventWorker worker) {
    
    this.worker = worker;
    return this;
  }

   /**
   * Get worker
   * @return worker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkerPerformanceEventWorker getWorker() {
    return worker;
  }


  public void setWorker(WorkerPerformanceEventWorker worker) {
    this.worker = worker;
  }


  public WorkerPerformanceEvent dutyDetails(WorkerPerformanceEventDutyDetails dutyDetails) {
    
    this.dutyDetails = dutyDetails;
    return this;
  }

   /**
   * Get dutyDetails
   * @return dutyDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkerPerformanceEventDutyDetails getDutyDetails() {
    return dutyDetails;
  }


  public void setDutyDetails(WorkerPerformanceEventDutyDetails dutyDetails) {
    this.dutyDetails = dutyDetails;
  }


  public WorkerPerformanceEvent evaluation(WorkerPerformanceEventEvaluation evaluation) {
    
    this.evaluation = evaluation;
    return this;
  }

   /**
   * Get evaluation
   * @return evaluation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkerPerformanceEventEvaluation getEvaluation() {
    return evaluation;
  }


  public void setEvaluation(WorkerPerformanceEventEvaluation evaluation) {
    this.evaluation = evaluation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkerPerformanceEvent workerPerformanceEvent = (WorkerPerformanceEvent) o;
    return Objects.equals(this.worker, workerPerformanceEvent.worker) &&
        Objects.equals(this.dutyDetails, workerPerformanceEvent.dutyDetails) &&
        Objects.equals(this.evaluation, workerPerformanceEvent.evaluation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(worker, dutyDetails, evaluation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkerPerformanceEvent {\n");
    sb.append("    worker: ").append(toIndentedString(worker)).append("\n");
    sb.append("    dutyDetails: ").append(toIndentedString(dutyDetails)).append("\n");
    sb.append("    evaluation: ").append(toIndentedString(evaluation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

