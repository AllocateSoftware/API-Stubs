# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from api_server.models.base_model_ import Model
from api_server.models.duty_details_when import DutyDetailsWhen
from api_server.models.duty_details_where import DutyDetailsWhere
from api_server import util


class DutyDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, when: DutyDetailsWhen=None, where: DutyDetailsWhere=None, requirements: object=None):
        """DutyDetails - a model defined in OpenAPI

        :param when: The when of this DutyDetails.
        :param where: The where of this DutyDetails.
        :param requirements: The requirements of this DutyDetails.
        """
        self.openapi_types = {
            'when': DutyDetailsWhen,
            'where': DutyDetailsWhere,
            'requirements': object
        }

        self.attribute_map = {
            'when': 'when',
            'where': 'where',
            'requirements': 'requirements'
        }

        self._when = when
        self._where = where
        self._requirements = requirements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DutyDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DutyDetails of this DutyDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def when(self):
        """Gets the when of this DutyDetails.


        :return: The when of this DutyDetails.
        :rtype: DutyDetailsWhen
        """
        return self._when

    @when.setter
    def when(self, when):
        """Sets the when of this DutyDetails.


        :param when: The when of this DutyDetails.
        :type when: DutyDetailsWhen
        """

        self._when = when

    @property
    def where(self):
        """Gets the where of this DutyDetails.


        :return: The where of this DutyDetails.
        :rtype: DutyDetailsWhere
        """
        return self._where

    @where.setter
    def where(self, where):
        """Sets the where of this DutyDetails.


        :param where: The where of this DutyDetails.
        :type where: DutyDetailsWhere
        """

        self._where = where

    @property
    def requirements(self):
        """Gets the requirements of this DutyDetails.


        :return: The requirements of this DutyDetails.
        :rtype: object
        """
        return self._requirements

    @requirements.setter
    def requirements(self, requirements):
        """Sets the requirements of this DutyDetails.


        :param requirements: The requirements of this DutyDetails.
        :type requirements: object
        """

        self._requirements = requirements
