/* 
 * Duties and Events
 *
 * ## Duties and Events 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ASW.APIServices.Core.Api;
using ASW.APIServices.Core.Model;
using ASW.APIServices.Core.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ASW.APIServices.Core.Test
{
    /// <summary>
    ///  Class for testing Event
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EventTests
    {
        // TODO uncomment below to declare an instance variable for Event
        //private Event instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Event
            //instance = new Event();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Event
        /// </summary>
        [Test]
        public void EventInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" Event
            //Assert.IsInstanceOf(typeof(Event), instance);
        }

        /// <summary>
        /// Test deserialize a DutyDeletedEvent from type Event
        /// </summary>
        [Test]
        public void DutyDeletedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyDeletedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyDeletedEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyAssignmentTimesheetRejectedEvent from type Event
        /// </summary>
        [Test]
        public void DutyAssignmentTimesheetRejectedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyAssignmentTimesheetRejectedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyAssignmentTimesheetRejectedEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyAssignmentUpdatedEvent from type Event
        /// </summary>
        [Test]
        public void DutyAssignmentUpdatedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyAssignmentUpdatedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyAssignmentUpdatedEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyAssignmentClearedEvent from type Event
        /// </summary>
        [Test]
        public void DutyAssignmentClearedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyAssignmentClearedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyAssignmentClearedEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyAssignmentTimesheetConfirmedEvent from type Event
        /// </summary>
        [Test]
        public void DutyAssignmentTimesheetConfirmedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyAssignmentTimesheetConfirmedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyAssignmentTimesheetConfirmedEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyUpdatedEvent from type Event
        /// </summary>
        [Test]
        public void DutyUpdatedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyUpdatedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyUpdatedEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyAssignmentTimesheetUnconfirmedEvent from type Event
        /// </summary>
        [Test]
        public void DutyAssignmentTimesheetUnconfirmedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyAssignmentTimesheetUnconfirmedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyAssignmentTimesheetUnconfirmedEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyAssignmentSubmittedEvent from type Event
        /// </summary>
        [Test]
        public void DutyAssignmentSubmittedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyAssignmentSubmittedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyAssignmentSubmittedEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyTempStaffingNoteDeletedEvent from type Event
        /// </summary>
        [Test]
        public void DutyTempStaffingNoteDeletedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyTempStaffingNoteDeletedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyTempStaffingNoteDeletedEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyAssignmentFinalisedEvent from type Event
        /// </summary>
        [Test]
        public void DutyAssignmentFinalisedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyAssignmentFinalisedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyAssignmentFinalisedEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyCancelledEvent from type Event
        /// </summary>
        [Test]
        public void DutyCancelledEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyCancelledEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyCancelledEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyEvent from type Event
        /// </summary>
        [Test]
        public void DutyEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyTempStaffingNoteCreatedEvent from type Event
        /// </summary>
        [Test]
        public void DutyTempStaffingNoteCreatedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyTempStaffingNoteCreatedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyTempStaffingNoteCreatedEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyAssignedEvent from type Event
        /// </summary>
        [Test]
        public void DutyAssignedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyAssignedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyAssignedEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyApprovedEvent from type Event
        /// </summary>
        [Test]
        public void DutyApprovedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyApprovedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyApprovedEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyCascadeEvent from type Event
        /// </summary>
        [Test]
        public void DutyCascadeEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyCascadeEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyCascadeEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyAssignmentRedeploymentEvent from type Event
        /// </summary>
        [Test]
        public void DutyAssignmentRedeploymentEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyAssignmentRedeploymentEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyAssignmentRedeploymentEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyTempStaffingExpressionOfInterestEvent from type Event
        /// </summary>
        [Test]
        public void DutyTempStaffingExpressionOfInterestEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyTempStaffingExpressionOfInterestEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyTempStaffingExpressionOfInterestEvent().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DutyAssignmentUnFinalisedEvent from type Event
        /// </summary>
        [Test]
        public void DutyAssignmentUnFinalisedEventDeserializeFromEventTest()
        {
            // TODO uncomment below to test deserialize a DutyAssignmentUnFinalisedEvent from type Event
            //Assert.IsInstanceOf(typeof(Event), JsonConvert.DeserializeObject<Event>(new DutyAssignmentUnFinalisedEvent().ToJson()));
        }

        /// <summary>
        /// Test the property 'EventType'
        /// </summary>
        [Test]
        public void EventTypeTest()
        {
            // TODO unit test for the property 'EventType'
        }

    }

}
