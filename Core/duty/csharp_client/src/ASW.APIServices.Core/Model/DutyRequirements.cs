/* 
 * Duties and Events
 *
 * ## Duties and Events 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ASW.APIServices.Core.Client.OpenAPIDateConverter;

namespace ASW.APIServices.Core.Model
{
    /// <summary>
    /// DutyRequirements
    /// </summary>
    [DataContract]
    public partial class DutyRequirements :  IEquatable<DutyRequirements>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DutyRequirements" /> class.
        /// </summary>
        /// <param name="gradeRequirement">gradeRequirement.</param>
        /// <param name="gender">gender.</param>
        public DutyRequirements(DutyRequirementsGradeRequirement gradeRequirement = default(DutyRequirementsGradeRequirement), string gender = default(string))
        {
            this.GradeRequirement = gradeRequirement;
            this.Gender = gender;
        }
        
        /// <summary>
        /// Gets or Sets GradeRequirement
        /// </summary>
        [DataMember(Name="gradeRequirement", EmitDefaultValue=false)]
        public DutyRequirementsGradeRequirement GradeRequirement { get; set; }

        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name="gender", EmitDefaultValue=false)]
        public string Gender { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DutyRequirements {\n");
            sb.Append("  GradeRequirement: ").Append(GradeRequirement).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DutyRequirements);
        }

        /// <summary>
        /// Returns true if DutyRequirements instances are equal
        /// </summary>
        /// <param name="input">Instance of DutyRequirements to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DutyRequirements input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.GradeRequirement == input.GradeRequirement ||
                    (this.GradeRequirement != null &&
                    this.GradeRequirement.Equals(input.GradeRequirement))
                ) && 
                (
                    this.Gender == input.Gender ||
                    (this.Gender != null &&
                    this.Gender.Equals(input.Gender))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.GradeRequirement != null)
                    hashCode = hashCode * 59 + this.GradeRequirement.GetHashCode();
                if (this.Gender != null)
                    hashCode = hashCode * 59 + this.Gender.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
