/*
 * Duties and Events
 *
 * ## Duties and Events 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using ASW.APIServices.Core.Attributes;
using Microsoft.AspNetCore.Authorization;
using ASW.APIServices.Core.Models;

namespace ASW.APIServices.Core.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class Class3rdPartyRosteringApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Cancel a duty. Also cancels any bookings (if present).</remarks>
        /// <param name="id">ID of the duty</param>
        /// <response code="200">Duty cancelled</response>
        /// <response code="202">The cancellation has been accepted and a response will be returned asyncronously.</response>
        [HttpDelete]
        [Route("/api/duty/v1/duties/{id}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 202, type: typeof(AsyncResponse))]
        public virtual IActionResult CancelDuty([FromRoute][Required]string id)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(AsyncResponse));

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Cancel a duty booking.</remarks>
        /// <param name="id">ID of the duty</param>
        /// <response code="200">Duty booking cancelled</response>
        /// <response code="202">The duty cancellation been accepted and a response will be returned asyncronously.</response>
        /// <response code="404">Duty or Customer not found</response>
        [HttpDelete]
        [Route("/api/duty/v1/duties/{id}/booking")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 202, type: typeof(AsyncResponse))]
        public virtual IActionResult CancelDutyBooking([FromRoute][Required]string id)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(AsyncResponse));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Create a new Duty</remarks>
        /// <param name="dutyDetails">Duty to be sent to agency</param>
        /// <response code="200">Duty created successfully</response>
        /// <response code="202">The duty has been accepted and a response will be returned asyncronously.</response>
        [HttpPost]
        [Route("/api/duty/v1/duties")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(string))]
        [ProducesResponseType(statusCode: 202, type: typeof(AsyncResponse))]
        public virtual IActionResult CreateDuty([FromBody]DutyDetails dutyDetails)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));
            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(AsyncResponse));
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Send a duty for fulfillment by contingent workforce (Bank, Cloudstaff, Agency)</remarks>
        /// <param name="id">ID of the duty</param>
        /// <param name="destination">Desination to send the duty</param>
        /// <response code="200">Duty sent successfully</response>
        /// <response code="202">Request been accepted and a response will be returned asyncronously.</response>
        [HttpPost]
        [Route("/api/duty/v1/duties/{id}/sendTo/{destination}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 202, type: typeof(AsyncResponse))]
        public virtual IActionResult SendDutyForFulfillment([FromRoute][Required]string id, [FromRoute][Required]string destination)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(AsyncResponse));

            throw new NotImplementedException();
        }
    }
}
