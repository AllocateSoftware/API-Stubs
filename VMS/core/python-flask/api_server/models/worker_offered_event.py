# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api_server.models.base_model_ import Model
from api_server.models.agency import Agency
from api_server import util

from api_server.models.agency import Agency  # noqa: E501

class WorkerOfferedEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object_type=None, booking_request_id=None, agency=None):  # noqa: E501
        """WorkerOfferedEvent - a model defined in OpenAPI

        :param object_type: The object_type of this WorkerOfferedEvent.  # noqa: E501
        :type object_type: str
        :param booking_request_id: The booking_request_id of this WorkerOfferedEvent.  # noqa: E501
        :type booking_request_id: str
        :param agency: The agency of this WorkerOfferedEvent.  # noqa: E501
        :type agency: Agency
        """
        self.openapi_types = {
            'object_type': str,
            'booking_request_id': str,
            'agency': Agency
        }

        self.attribute_map = {
            'object_type': 'objectType',
            'booking_request_id': 'bookingRequestId',
            'agency': 'agency'
        }

        self._object_type = object_type
        self._booking_request_id = booking_request_id
        self._agency = agency

    @classmethod
    def from_dict(cls, dikt) -> 'WorkerOfferedEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WorkerOfferedEvent of this WorkerOfferedEvent.  # noqa: E501
        :rtype: WorkerOfferedEvent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object_type(self):
        """Gets the object_type of this WorkerOfferedEvent.


        :return: The object_type of this WorkerOfferedEvent.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this WorkerOfferedEvent.


        :param object_type: The object_type of this WorkerOfferedEvent.
        :type object_type: str
        """
        if object_type is None:
            raise ValueError("Invalid value for `object_type`, must not be `None`")  # noqa: E501

        self._object_type = object_type

    @property
    def booking_request_id(self):
        """Gets the booking_request_id of this WorkerOfferedEvent.

        The ID of the booking request  # noqa: E501

        :return: The booking_request_id of this WorkerOfferedEvent.
        :rtype: str
        """
        return self._booking_request_id

    @booking_request_id.setter
    def booking_request_id(self, booking_request_id):
        """Sets the booking_request_id of this WorkerOfferedEvent.

        The ID of the booking request  # noqa: E501

        :param booking_request_id: The booking_request_id of this WorkerOfferedEvent.
        :type booking_request_id: str
        """

        self._booking_request_id = booking_request_id

    @property
    def agency(self):
        """Gets the agency of this WorkerOfferedEvent.


        :return: The agency of this WorkerOfferedEvent.
        :rtype: Agency
        """
        return self._agency

    @agency.setter
    def agency(self, agency):
        """Sets the agency of this WorkerOfferedEvent.


        :param agency: The agency of this WorkerOfferedEvent.
        :type agency: Agency
        """

        self._agency = agency
