# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from api_server.models.base_model_ import Model
from api_server.models.duty import Duty
from api_server import util


class DutyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, worker_id: str=None, duty: Duty=None):
        """DutyRequest - a model defined in OpenAPI

        :param worker_id: The worker_id of this DutyRequest.
        :param duty: The duty of this DutyRequest.
        """
        self.openapi_types = {
            'worker_id': str,
            'duty': Duty
        }

        self.attribute_map = {
            'worker_id': 'workerId',
            'duty': 'duty'
        }

        self._worker_id = worker_id
        self._duty = duty

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DutyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DutyRequest of this DutyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def worker_id(self):
        """Gets the worker_id of this DutyRequest.

        Where the caller wishes to direct-book a particular worker into the duty, their identifier is specified here.

        :return: The worker_id of this DutyRequest.
        :rtype: str
        """
        return self._worker_id

    @worker_id.setter
    def worker_id(self, worker_id):
        """Sets the worker_id of this DutyRequest.

        Where the caller wishes to direct-book a particular worker into the duty, their identifier is specified here.

        :param worker_id: The worker_id of this DutyRequest.
        :type worker_id: str
        """

        self._worker_id = worker_id

    @property
    def duty(self):
        """Gets the duty of this DutyRequest.


        :return: The duty of this DutyRequest.
        :rtype: Duty
        """
        return self._duty

    @duty.setter
    def duty(self, duty):
        """Sets the duty of this DutyRequest.


        :param duty: The duty of this DutyRequest.
        :type duty: Duty
        """
        if duty is None:
            raise ValueError("Invalid value for `duty`, must not be `None`")

        self._duty = duty
