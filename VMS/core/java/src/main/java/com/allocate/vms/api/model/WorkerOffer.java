/*
 * VMS API
 * ## Description  API to be impemented by VMS systems for integration into HealthSuite business processes 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.allocate.vms.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.allocate.vms.api.model.Agency;
import com.allocate.vms.api.model.Person;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * WorkerOffer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-09T13:35:13.806839Z[Europe/London]")
public class WorkerOffer {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_BOOKING_REQUEST_ID = "bookingRequestId";
  @SerializedName(SERIALIZED_NAME_BOOKING_REQUEST_ID)
  private String bookingRequestId;

  public static final String SERIALIZED_NAME_WORKER = "worker";
  @SerializedName(SERIALIZED_NAME_WORKER)
  private Person worker;

  public static final String SERIALIZED_NAME_AGENCY = "agency";
  @SerializedName(SERIALIZED_NAME_AGENCY)
  private Agency agency;

  /**
   * Qualification Status:  * &#x60;qualified&#x60; - Worker has passed all trust-defined checks, and may be considered valid to book.  * &#x60;unqualified&#x60; - Worker has not passed some, or all of the trust-defined checks. These should be performed before progressing to booking the worker. 
   */
  @JsonAdapter(QualificationStatusEnum.Adapter.class)
  public enum QualificationStatusEnum {
    QUALIFIED("qualified"),
    
    UNQUALIFIED("unqualified");

    private String value;

    QualificationStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static QualificationStatusEnum fromValue(String value) {
      for (QualificationStatusEnum b : QualificationStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<QualificationStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final QualificationStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public QualificationStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return QualificationStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_QUALIFICATION_STATUS = "qualificationStatus";
  @SerializedName(SERIALIZED_NAME_QUALIFICATION_STATUS)
  private QualificationStatusEnum qualificationStatus;


  public WorkerOffer id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for this offer.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier for this offer.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public WorkerOffer bookingRequestId(String bookingRequestId) {
    
    this.bookingRequestId = bookingRequestId;
    return this;
  }

   /**
   * The underlying booking request for this offer.
   * @return bookingRequestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The underlying booking request for this offer.")

  public String getBookingRequestId() {
    return bookingRequestId;
  }


  public void setBookingRequestId(String bookingRequestId) {
    this.bookingRequestId = bookingRequestId;
  }


  public WorkerOffer worker(Person worker) {
    
    this.worker = worker;
    return this;
  }

   /**
   * Get worker
   * @return worker
  **/
  @ApiModelProperty(required = true, value = "")

  public Person getWorker() {
    return worker;
  }


  public void setWorker(Person worker) {
    this.worker = worker;
  }


  public WorkerOffer agency(Agency agency) {
    
    this.agency = agency;
    return this;
  }

   /**
   * Get agency
   * @return agency
  **/
  @ApiModelProperty(required = true, value = "")

  public Agency getAgency() {
    return agency;
  }


  public void setAgency(Agency agency) {
    this.agency = agency;
  }


  public WorkerOffer qualificationStatus(QualificationStatusEnum qualificationStatus) {
    
    this.qualificationStatus = qualificationStatus;
    return this;
  }

   /**
   * Qualification Status:  * &#x60;qualified&#x60; - Worker has passed all trust-defined checks, and may be considered valid to book.  * &#x60;unqualified&#x60; - Worker has not passed some, or all of the trust-defined checks. These should be performed before progressing to booking the worker. 
   * @return qualificationStatus
  **/
  @ApiModelProperty(required = true, value = "Qualification Status:  * `qualified` - Worker has passed all trust-defined checks, and may be considered valid to book.  * `unqualified` - Worker has not passed some, or all of the trust-defined checks. These should be performed before progressing to booking the worker. ")

  public QualificationStatusEnum getQualificationStatus() {
    return qualificationStatus;
  }


  public void setQualificationStatus(QualificationStatusEnum qualificationStatus) {
    this.qualificationStatus = qualificationStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkerOffer workerOffer = (WorkerOffer) o;
    return Objects.equals(this.id, workerOffer.id) &&
        Objects.equals(this.bookingRequestId, workerOffer.bookingRequestId) &&
        Objects.equals(this.worker, workerOffer.worker) &&
        Objects.equals(this.agency, workerOffer.agency) &&
        Objects.equals(this.qualificationStatus, workerOffer.qualificationStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, bookingRequestId, worker, agency, qualificationStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkerOffer {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    bookingRequestId: ").append(toIndentedString(bookingRequestId)).append("\n");
    sb.append("    worker: ").append(toIndentedString(worker)).append("\n");
    sb.append("    agency: ").append(toIndentedString(agency)).append("\n");
    sb.append("    qualificationStatus: ").append(toIndentedString(qualificationStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

