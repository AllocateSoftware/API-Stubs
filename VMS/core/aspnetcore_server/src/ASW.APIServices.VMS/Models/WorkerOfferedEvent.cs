/*
 * VMS API
 *
 * ## Description  API to be impemented by VMS systems for integration into HealthSuite business processes 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using ASW.APIServices.VMS.Converters;

namespace ASW.APIServices.VMS.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class WorkerOfferedEvent : IEquatable<WorkerOfferedEvent>
    { 
        /// <summary>
        /// Gets or Sets ObjectType
        /// </summary>
        [Required]
        [DataMember(Name="objectType", EmitDefaultValue=false)]
        public string ObjectType { get; set; }

        /// <summary>
        /// The ID of the booking request
        /// </summary>
        /// <value>The ID of the booking request</value>
        [DataMember(Name="bookingRequestId", EmitDefaultValue=false)]
        public string BookingRequestId { get; set; }

        /// <summary>
        /// Gets or Sets Agency
        /// </summary>
        [DataMember(Name="agency", EmitDefaultValue=false)]
        public Agency Agency { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WorkerOfferedEvent {\n");
            sb.Append("  ObjectType: ").Append(ObjectType).Append("\n");
            sb.Append("  BookingRequestId: ").Append(BookingRequestId).Append("\n");
            sb.Append("  Agency: ").Append(Agency).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((WorkerOfferedEvent)obj);
        }

        /// <summary>
        /// Returns true if WorkerOfferedEvent instances are equal
        /// </summary>
        /// <param name="other">Instance of WorkerOfferedEvent to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WorkerOfferedEvent other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    ObjectType == other.ObjectType ||
                    ObjectType != null &&
                    ObjectType.Equals(other.ObjectType)
                ) && 
                (
                    BookingRequestId == other.BookingRequestId ||
                    BookingRequestId != null &&
                    BookingRequestId.Equals(other.BookingRequestId)
                ) && 
                (
                    Agency == other.Agency ||
                    Agency != null &&
                    Agency.Equals(other.Agency)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (ObjectType != null)
                    hashCode = hashCode * 59 + ObjectType.GetHashCode();
                    if (BookingRequestId != null)
                    hashCode = hashCode * 59 + BookingRequestId.GetHashCode();
                    if (Agency != null)
                    hashCode = hashCode * 59 + Agency.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(WorkerOfferedEvent left, WorkerOfferedEvent right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(WorkerOfferedEvent left, WorkerOfferedEvent right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
