/* 
 * VMS API
 *
 * ## Description  API to be impemented by VMS systems for integration into HealthSuite business processes 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ASW.APIServices.VMS.Api;
using ASW.APIServices.VMS.Model;
using ASW.APIServices.VMS.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ASW.APIServices.VMS.Test
{
    /// <summary>
    ///  Class for testing Duty
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DutyTests
    {
        // TODO uncomment below to declare an instance variable for Duty
        //private Duty instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Duty
            //instance = new Duty();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Duty
        /// </summary>
        [Test]
        public void DutyInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" Duty
            //Assert.IsInstanceOf(typeof(Duty), instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'When'
        /// </summary>
        [Test]
        public void WhenTest()
        {
            // TODO unit test for the property 'When'
        }
        /// <summary>
        /// Test the property 'Where'
        /// </summary>
        [Test]
        public void WhereTest()
        {
            // TODO unit test for the property 'Where'
        }
        /// <summary>
        /// Test the property 'Requirements'
        /// </summary>
        [Test]
        public void RequirementsTest()
        {
            // TODO unit test for the property 'Requirements'
        }
        /// <summary>
        /// Test the property 'ClientDeptId'
        /// </summary>
        [Test]
        public void ClientDeptIdTest()
        {
            // TODO unit test for the property 'ClientDeptId'
        }
        /// <summary>
        /// Test the property 'SubDiscipline'
        /// </summary>
        [Test]
        public void SubDisciplineTest()
        {
            // TODO unit test for the property 'SubDiscipline'
        }
        /// <summary>
        /// Test the property 'Grade'
        /// </summary>
        [Test]
        public void GradeTest()
        {
            // TODO unit test for the property 'Grade'
        }
        /// <summary>
        /// Test the property 'FallbackGrade'
        /// </summary>
        [Test]
        public void FallbackGradeTest()
        {
            // TODO unit test for the property 'FallbackGrade'
        }
        /// <summary>
        /// Test the property 'VacancyReason'
        /// </summary>
        [Test]
        public void VacancyReasonTest()
        {
            // TODO unit test for the property 'VacancyReason'
        }
        /// <summary>
        /// Test the property 'PoNumber'
        /// </summary>
        [Test]
        public void PoNumberTest()
        {
            // TODO unit test for the property 'PoNumber'
        }
        /// <summary>
        /// Test the property 'UniqueNumber'
        /// </summary>
        [Test]
        public void UniqueNumberTest()
        {
            // TODO unit test for the property 'UniqueNumber'
        }
        /// <summary>
        /// Test the property 'Agency'
        /// </summary>
        [Test]
        public void AgencyTest()
        {
            // TODO unit test for the property 'Agency'
        }

    }

}
