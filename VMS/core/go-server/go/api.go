/*
 * VMS API
 *
 * ## Description  API to be impemented by VMS systems for integration into HealthSuite business processes 
 *
 * API version: 1.0.0
 * Contact: support@allocatesoftware.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package allocateApi

import (
	"net/http"
)


// AgenciesApiRouter defines the required methods for binding the api requests to a responses for the AgenciesApi
// The AgenciesApiRouter implementation should parse necessary information from the http request, 
// pass the data to a AgenciesApiServicer to perform the required actions, then write the service results to the http response.
type AgenciesApiRouter interface { 
	GetCostings(http.ResponseWriter, *http.Request)
	SendDutyToAgencies(http.ResponseWriter, *http.Request)
	SendDutyToAgency(http.ResponseWriter, *http.Request)
}
// AgencyApiRouter defines the required methods for binding the api requests to a responses for the AgencyApi
// The AgencyApiRouter implementation should parse necessary information from the http request, 
// pass the data to a AgencyApiServicer to perform the required actions, then write the service results to the http response.
type AgencyApiRouter interface { 
	OfferWorker(http.ResponseWriter, *http.Request)
}
// BookingsApiRouter defines the required methods for binding the api requests to a responses for the BookingsApi
// The BookingsApiRouter implementation should parse necessary information from the http request, 
// pass the data to a BookingsApiServicer to perform the required actions, then write the service results to the http response.
type BookingsApiRouter interface { 
	AcceptAgencyOffer(http.ResponseWriter, *http.Request)
	CancelBooking(http.ResponseWriter, *http.Request)
	CancelBookingRequest(http.ResponseWriter, *http.Request)
	GetBooking(http.ResponseWriter, *http.Request)
}
// WorkersApiRouter defines the required methods for binding the api requests to a responses for the WorkersApi
// The WorkersApiRouter implementation should parse necessary information from the http request, 
// pass the data to a WorkersApiServicer to perform the required actions, then write the service results to the http response.
type WorkersApiRouter interface { 
	GetWorker(http.ResponseWriter, *http.Request)
}


// AgenciesApiServicer defines the api actions for the AgenciesApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type AgenciesApiServicer interface { 
	GetCostings(Duty) (interface{}, error)
	SendDutyToAgencies(DutyRequest) (interface{}, error)
	SendDutyToAgency(string, DutyRequest) (interface{}, error)
}


// AgencyApiServicer defines the api actions for the AgencyApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type AgencyApiServicer interface { 
	OfferWorker(string, PersonIdentifier) (interface{}, error)
}


// BookingsApiServicer defines the api actions for the BookingsApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type BookingsApiServicer interface { 
	AcceptAgencyOffer(string, string) (interface{}, error)
	CancelBooking(string) (interface{}, error)
	CancelBookingRequest(string) (interface{}, error)
	GetBooking(string) (interface{}, error)
}


// WorkersApiServicer defines the api actions for the WorkersApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type WorkersApiServicer interface { 
	GetWorker(string) (interface{}, error)
}
