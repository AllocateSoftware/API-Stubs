/*
 * VMS API
 *
 * ## Description  API to be impemented by VMS systems for integration into HealthSuite business processes 
 *
 * API version: 1.0.0
 * Contact: support@allocatesoftware.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package allocateApi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A BookingsApiController binds http requests to an api service and writes the service results to the http response
type BookingsApiController struct {
	service BookingsApiServicer
}

// NewBookingsApiController creates a default api controller
func NewBookingsApiController(s BookingsApiServicer) Router {
	return &BookingsApiController{ service: s }
}

// Routes returns all of the api route for the BookingsApiController
func (c *BookingsApiController) Routes() Routes {
	return Routes{ 
		{
			"AcceptAgencyOffer",
			strings.ToUpper("Put"),
			"/vms/api/v1/bookingRequests/{bookingRequestId}/offers/{offerId}/accept",
			c.AcceptAgencyOffer,
		},
		{
			"CancelBooking",
			strings.ToUpper("Delete"),
			"/vms/api/v1/bookings/{bookingId}",
			c.CancelBooking,
		},
		{
			"CancelBookingRequest",
			strings.ToUpper("Delete"),
			"/vms/api/v1/bookingRequests/{bookingRequestId}",
			c.CancelBookingRequest,
		},
		{
			"GetBooking",
			strings.ToUpper("Get"),
			"/vms/api/v1/bookings/{bookingId}",
			c.GetBooking,
		},
	}
}

// AcceptAgencyOffer - 
func (c *BookingsApiController) AcceptAgencyOffer(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	bookingRequestId := params["bookingRequestId"]
	offerId := params["offerId"]
	result, err := c.service.AcceptAgencyOffer(bookingRequestId, offerId)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// CancelBooking - 
func (c *BookingsApiController) CancelBooking(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	bookingId := params["bookingId"]
	result, err := c.service.CancelBooking(bookingId)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// CancelBookingRequest - 
func (c *BookingsApiController) CancelBookingRequest(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	bookingRequestId := params["bookingRequestId"]
	result, err := c.service.CancelBookingRequest(bookingRequestId)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// GetBooking - 
func (c *BookingsApiController) GetBooking(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	bookingId := params["bookingId"]
	result, err := c.service.GetBooking(bookingId)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}
