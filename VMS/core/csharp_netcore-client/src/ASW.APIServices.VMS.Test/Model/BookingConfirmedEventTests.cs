/* 
 * VMS API
 *
 * ## Description  API to be impemented by VMS systems for integration into HealthSuite business processes 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ASW.APIServices.VMS.Api;
using ASW.APIServices.VMS.Model;
using ASW.APIServices.VMS.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ASW.APIServices.VMS.Test
{
    /// <summary>
    ///  Class for testing BookingConfirmedEvent
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class BookingConfirmedEventTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for BookingConfirmedEvent
        //private BookingConfirmedEvent instance;

        public BookingConfirmedEventTests()
        {
            // TODO uncomment below to create an instance of BookingConfirmedEvent
            //instance = new BookingConfirmedEvent();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BookingConfirmedEvent
        /// </summary>
        [Fact]
        public void BookingConfirmedEventInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" BookingConfirmedEvent
            //Assert.IsInstanceOfType<BookingConfirmedEvent> (instance, "variable 'instance' is a BookingConfirmedEvent");
        }


        /// <summary>
        /// Test the property 'BookingRequestId'
        /// </summary>
        [Fact]
        public void BookingRequestIdTest()
        {
            // TODO unit test for the property 'BookingRequestId'
        }
        /// <summary>
        /// Test the property 'BookingId'
        /// </summary>
        [Fact]
        public void BookingIdTest()
        {
            // TODO unit test for the property 'BookingId'
        }
        /// <summary>
        /// Test the property 'AgencyId'
        /// </summary>
        [Fact]
        public void AgencyIdTest()
        {
            // TODO unit test for the property 'AgencyId'
        }
        /// <summary>
        /// Test the property 'Cost'
        /// </summary>
        [Fact]
        public void CostTest()
        {
            // TODO unit test for the property 'Cost'
        }

    }

}
