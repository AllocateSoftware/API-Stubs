# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api_server.models.base_model_ import Model
from api_server.models.unit import Unit
from api_server import util

from api_server.models.unit import Unit  # noqa: E501

class StructureProvision(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer_code=None, units=None):  # noqa: E501
        """StructureProvision - a model defined in OpenAPI

        :param customer_code: The customer_code of this StructureProvision.  # noqa: E501
        :type customer_code: str
        :param units: The units of this StructureProvision.  # noqa: E501
        :type units: List[Unit]
        """
        self.openapi_types = {
            'customer_code': str,
            'units': List[Unit]
        }

        self.attribute_map = {
            'customer_code': 'customerCode',
            'units': 'units'
        }

        self._customer_code = customer_code
        self._units = units

    @classmethod
    def from_dict(cls, dikt) -> 'StructureProvision':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StructureProvision of this StructureProvision.  # noqa: E501
        :rtype: StructureProvision
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_code(self):
        """Gets the customer_code of this StructureProvision.

        ID of the Customer (Trust)  # noqa: E501

        :return: The customer_code of this StructureProvision.
        :rtype: str
        """
        return self._customer_code

    @customer_code.setter
    def customer_code(self, customer_code):
        """Sets the customer_code of this StructureProvision.

        ID of the Customer (Trust)  # noqa: E501

        :param customer_code: The customer_code of this StructureProvision.
        :type customer_code: str
        """

        self._customer_code = customer_code

    @property
    def units(self):
        """Gets the units of this StructureProvision.

        List of units present within the customer's system  # noqa: E501

        :return: The units of this StructureProvision.
        :rtype: List[Unit]
        """
        return self._units

    @units.setter
    def units(self, units):
        """Sets the units of this StructureProvision.

        List of units present within the customer's system  # noqa: E501

        :param units: The units of this StructureProvision.
        :type units: List[Unit]
        """

        self._units = units
