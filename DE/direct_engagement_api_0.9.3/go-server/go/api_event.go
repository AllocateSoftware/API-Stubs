/*
 * DE Provider Direct Engagement API
 *
 * description
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package allocateApi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A EventApiController binds http requests to an api service and writes the service results to the http response
type EventApiController struct {
	service EventApiServicer
}

// NewEventApiController creates a default api controller
func NewEventApiController(s EventApiServicer) Router {
	return &EventApiController{ service: s }
}

// Routes returns all of the api route for the EventApiController
func (c *EventApiController) Routes() Routes {
	return Routes{ 
		{
			"GetEvents",
			strings.ToUpper("Get"),
			"/{version}/trustcode/{trustCode}/event",
			c.GetEvents,
		},
	}
}

// GetEvents - Get all events older than input timestamp
func (c *EventApiController) GetEvents(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	query := r.URL.Query()
	version := params["version"]
	trustCode := params["trustCode"]
	dateTimeFrom := query.Get("dateTimeFrom")
	page := query.Get("page")
	pageSize := query.Get("pageSize")
	result, err := c.service.GetEvents(version, trustCode, dateTimeFrom, page, pageSize)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}
