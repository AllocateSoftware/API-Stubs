/*
 * DE Provider Direct Engagement API
 * description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.allocate.openapi.api;

import com.allocate.openapi.ApiException;
import com.allocate.openapi.model.BookingInfo;
import com.allocate.openapi.model.BookingResponse;
import com.allocate.openapi.model.ContractStatus;
import com.allocate.openapi.model.Duty;
import com.allocate.openapi.model.InlineObject;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DutyApi
 */
@Ignore
public class DutyApiTest {

    private final DutyApi api = new DutyApi();

    
    /**
     * Cancel a duty
     *
     * Service that cancels certain duty.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cancelDutyTest() throws ApiException {
        String version = null;
        String trustCode = null;
        Integer dutyId = null;
        api.cancelDuty(version, trustCode, dutyId);

        // TODO: test validations
    }
    
    /**
     * Creates booking for duty
     *
     * Service that will create new booking on HR side with data sent by DE Provider.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fillDutyTest() throws ApiException {
        String version = null;
        String trustCode = null;
        Integer dutyId = null;
        BookingInfo bookingInfo = null;
        BookingResponse response = api.fillDuty(version, trustCode, dutyId, bookingInfo);

        // TODO: test validations
    }
    
    /**
     * Returns details about a duties.
     *
     * Returns details about a duties.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDutyDetailsTest() throws ApiException {
        String version = null;
        String trustCode = null;
        List<Integer> id = null;
        Integer page = null;
        Integer pageSize = null;
        Duty response = api.getDutyDetails(version, trustCode, id, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * Returns details about a duties.
     *
     * Returns details about a duties.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSingleDutyDetailsTest() throws ApiException {
        String version = null;
        String trustCode = null;
        Integer dutyId = null;
        Integer page = null;
        Integer pageSize = null;
        Duty response = api.getSingleDutyDetails(version, trustCode, dutyId, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * Updates DE Contract status
     *
     * Service that will be used by DE Provider to update the contract status, after DE contract is created/approved.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateContractStatusTest() throws ApiException {
        String version = null;
        String trustCode = null;
        Integer dutyId = null;
        String contractId = null;
        ContractStatus statusId = null;
        api.updateContractStatus(version, trustCode, dutyId, contractId, statusId);

        // TODO: test validations
    }
    
    /**
     * Updates timesheet for duty
     *
     * Service that will be used by DE Provider to update the timesheets, after approving the payment on their side.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTimesheetsTest() throws ApiException {
        String version = null;
        String trustCode = null;
        Integer dutyId = null;
        InlineObject inlineObject = null;
        api.updateTimesheets(version, trustCode, dutyId, inlineObject);

        // TODO: test validations
    }
    
}
