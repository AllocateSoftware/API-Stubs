/*
 * Vacancy Booking API and Events
 *      ## Duty Booking API and events and Events 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.allocate.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.allocate.openapi.model.CancellationCost;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * ProposalDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-09T13:33:52.482992Z[Europe/London]")
public class ProposalDetails {
  public static final String SERIALIZED_NAME_PERSON_ID = "personId";
  @SerializedName(SERIALIZED_NAME_PERSON_ID)
  private String personId;

  /**
   * The engagement route for this worker
   */
  @JsonAdapter(EngagementRouteEnum.Adapter.class)
  public enum EngagementRouteEnum {
    SUBSTANTIVE("substantive"),
    
    BANK("bank"),
    
    AGENCY("agency"),
    
    OTHER("other");

    private String value;

    EngagementRouteEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EngagementRouteEnum fromValue(String value) {
      for (EngagementRouteEnum b : EngagementRouteEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EngagementRouteEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EngagementRouteEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EngagementRouteEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EngagementRouteEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ENGAGEMENT_ROUTE = "engagementRoute";
  @SerializedName(SERIALIZED_NAME_ENGAGEMENT_ROUTE)
  private EngagementRouteEnum engagementRoute;

  public static final String SERIALIZED_NAME_AGENCY_ID = "agencyId";
  @SerializedName(SERIALIZED_NAME_AGENCY_ID)
  private String agencyId;

  public static final String SERIALIZED_NAME_COST = "cost";
  @SerializedName(SERIALIZED_NAME_COST)
  private BigDecimal cost;

  public static final String SERIALIZED_NAME_CANCELLATION_COSTS = "cancellationCosts";
  @SerializedName(SERIALIZED_NAME_CANCELLATION_COSTS)
  private List<CancellationCost> cancellationCosts = null;


  public ProposalDetails personId(String personId) {
    
    this.personId = personId;
    return this;
  }

   /**
   * Allocate PersonID for the person being proposed
   * @return personId
  **/
  @ApiModelProperty(required = true, value = "Allocate PersonID for the person being proposed")

  public String getPersonId() {
    return personId;
  }


  public void setPersonId(String personId) {
    this.personId = personId;
  }


  public ProposalDetails engagementRoute(EngagementRouteEnum engagementRoute) {
    
    this.engagementRoute = engagementRoute;
    return this;
  }

   /**
   * The engagement route for this worker
   * @return engagementRoute
  **/
  @ApiModelProperty(required = true, value = "The engagement route for this worker")

  public EngagementRouteEnum getEngagementRoute() {
    return engagementRoute;
  }


  public void setEngagementRoute(EngagementRouteEnum engagementRoute) {
    this.engagementRoute = engagementRoute;
  }


  public ProposalDetails agencyId(String agencyId) {
    
    this.agencyId = agencyId;
    return this;
  }

   /**
   * The Allocate Agency ID for the agency, if this worker is being provided through an agency engagement
   * @return agencyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Allocate Agency ID for the agency, if this worker is being provided through an agency engagement")

  public String getAgencyId() {
    return agencyId;
  }


  public void setAgencyId(String agencyId) {
    this.agencyId = agencyId;
  }


  public ProposalDetails cost(BigDecimal cost) {
    
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getCost() {
    return cost;
  }


  public void setCost(BigDecimal cost) {
    this.cost = cost;
  }


  public ProposalDetails cancellationCosts(List<CancellationCost> cancellationCosts) {
    
    this.cancellationCosts = cancellationCosts;
    return this;
  }

  public ProposalDetails addCancellationCostsItem(CancellationCost cancellationCostsItem) {
    if (this.cancellationCosts == null) {
      this.cancellationCosts = new ArrayList<CancellationCost>();
    }
    this.cancellationCosts.add(cancellationCostsItem);
    return this;
  }

   /**
   * Get cancellationCosts
   * @return cancellationCosts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CancellationCost> getCancellationCosts() {
    return cancellationCosts;
  }


  public void setCancellationCosts(List<CancellationCost> cancellationCosts) {
    this.cancellationCosts = cancellationCosts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProposalDetails proposalDetails = (ProposalDetails) o;
    return Objects.equals(this.personId, proposalDetails.personId) &&
        Objects.equals(this.engagementRoute, proposalDetails.engagementRoute) &&
        Objects.equals(this.agencyId, proposalDetails.agencyId) &&
        Objects.equals(this.cost, proposalDetails.cost) &&
        Objects.equals(this.cancellationCosts, proposalDetails.cancellationCosts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(personId, engagementRoute, agencyId, cost, cancellationCosts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProposalDetails {\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    engagementRoute: ").append(toIndentedString(engagementRoute)).append("\n");
    sb.append("    agencyId: ").append(toIndentedString(agencyId)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    cancellationCosts: ").append(toIndentedString(cancellationCosts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

