/*
 * Vacancy Booking API and Events
 *      ## Duty Booking API and events and Events 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.allocate.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.allocate.openapi.model.VacancyPersonRequirements;
import com.allocate.openapi.model.VacancyWhen;
import com.allocate.openapi.model.VacancyWhere;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Vacancy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-09T13:33:52.482992Z[Europe/London]")
public class Vacancy {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_WHEN = "when";
  @SerializedName(SERIALIZED_NAME_WHEN)
  private VacancyWhen when;

  public static final String SERIALIZED_NAME_WHERE = "where";
  @SerializedName(SERIALIZED_NAME_WHERE)
  private VacancyWhere where;

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private String reason;

  public static final String SERIALIZED_NAME_PERSON_REQUIREMENTS = "personRequirements";
  @SerializedName(SERIALIZED_NAME_PERSON_REQUIREMENTS)
  private VacancyPersonRequirements personRequirements;


  public Vacancy id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Identifier for this vacancy
   * @return id
  **/
  @ApiModelProperty(example = "D6540039-97B6-4D38-9837-29AA1C02302F", required = true, value = "Identifier for this vacancy")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Vacancy when(VacancyWhen when) {
    
    this.when = when;
    return this;
  }

   /**
   * Get when
   * @return when
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VacancyWhen getWhen() {
    return when;
  }


  public void setWhen(VacancyWhen when) {
    this.when = when;
  }


  public Vacancy where(VacancyWhere where) {
    
    this.where = where;
    return this;
  }

   /**
   * Get where
   * @return where
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VacancyWhere getWhere() {
    return where;
  }


  public void setWhere(VacancyWhere where) {
    this.where = where;
  }


  public Vacancy reason(String reason) {
    
    this.reason = reason;
    return this;
  }

   /**
   * Reason for the request
   * @return reason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason for the request")

  public String getReason() {
    return reason;
  }


  public void setReason(String reason) {
    this.reason = reason;
  }


  public Vacancy personRequirements(VacancyPersonRequirements personRequirements) {
    
    this.personRequirements = personRequirements;
    return this;
  }

   /**
   * Get personRequirements
   * @return personRequirements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VacancyPersonRequirements getPersonRequirements() {
    return personRequirements;
  }


  public void setPersonRequirements(VacancyPersonRequirements personRequirements) {
    this.personRequirements = personRequirements;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vacancy vacancy = (Vacancy) o;
    return Objects.equals(this.id, vacancy.id) &&
        Objects.equals(this.when, vacancy.when) &&
        Objects.equals(this.where, vacancy.where) &&
        Objects.equals(this.reason, vacancy.reason) &&
        Objects.equals(this.personRequirements, vacancy.personRequirements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, when, where, reason, personRequirements);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vacancy {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    when: ").append(toIndentedString(when)).append("\n");
    sb.append("    where: ").append(toIndentedString(where)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    personRequirements: ").append(toIndentedString(personRequirements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

