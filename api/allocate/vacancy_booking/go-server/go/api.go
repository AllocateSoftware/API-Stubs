/*
 * Vacancy Booking API and Events
 *
 *      ## Duty Booking API and events and Events 
 *
 * API version: 1.0.0
 * Contact: support@allocatesoftware.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package allocateApi

import (
	"net/http"
)


// ProposalApiRouter defines the required methods for binding the api requests to a responses for the ProposalApi
// The ProposalApiRouter implementation should parse necessary information from the http request, 
// pass the data to a ProposalApiServicer to perform the required actions, then write the service results to the http response.
type ProposalApiRouter interface { 
	AcceptProposal(http.ResponseWriter, *http.Request)
	CancelProposal(http.ResponseWriter, *http.Request)
	GetProposal(http.ResponseWriter, *http.Request)
	UpdateProposal(http.ResponseWriter, *http.Request)
}
// VacancyApiRouter defines the required methods for binding the api requests to a responses for the VacancyApi
// The VacancyApiRouter implementation should parse necessary information from the http request, 
// pass the data to a VacancyApiServicer to perform the required actions, then write the service results to the http response.
type VacancyApiRouter interface { 
	CreateProposal(http.ResponseWriter, *http.Request)
	CreateVacancy(http.ResponseWriter, *http.Request)
	SubmitTimesheet(http.ResponseWriter, *http.Request)
}


// ProposalApiServicer defines the api actions for the ProposalApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type ProposalApiServicer interface { 
	AcceptProposal(string) (interface{}, error)
	CancelProposal(string) (interface{}, error)
	GetProposal(string) (interface{}, error)
	UpdateProposal(string, ProposalDetails) (interface{}, error)
}


// VacancyApiServicer defines the api actions for the VacancyApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type VacancyApiServicer interface { 
	CreateProposal(string, ProposalDetails) (interface{}, error)
	CreateVacancy(Vacancy) (interface{}, error)
	SubmitTimesheet(string, InlineObject) (interface{}, error)
}
