# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api_server.models.base_model_ import Model
from api_server import util


class CreateVacancyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vacancy_id=None):  # noqa: E501
        """CreateVacancyResponse - a model defined in OpenAPI

        :param vacancy_id: The vacancy_id of this CreateVacancyResponse.  # noqa: E501
        :type vacancy_id: str
        """
        self.openapi_types = {
            'vacancy_id': str
        }

        self.attribute_map = {
            'vacancy_id': 'vacancyId'
        }

        self._vacancy_id = vacancy_id

    @classmethod
    def from_dict(cls, dikt) -> 'CreateVacancyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateVacancyResponse of this CreateVacancyResponse.  # noqa: E501
        :rtype: CreateVacancyResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vacancy_id(self):
        """Gets the vacancy_id of this CreateVacancyResponse.

        The ID of the vacancy created  # noqa: E501

        :return: The vacancy_id of this CreateVacancyResponse.
        :rtype: str
        """
        return self._vacancy_id

    @vacancy_id.setter
    def vacancy_id(self, vacancy_id):
        """Sets the vacancy_id of this CreateVacancyResponse.

        The ID of the vacancy created  # noqa: E501

        :param vacancy_id: The vacancy_id of this CreateVacancyResponse.
        :type vacancy_id: str
        """
        if vacancy_id is None:
            raise ValueError("Invalid value for `vacancy_id`, must not be `None`")  # noqa: E501

        self._vacancy_id = vacancy_id
