# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api_server.models.base_model_ import Model
from api_server.models.date_span import DateSpan
from api_server import util

from api_server.models.date_span import DateSpan  # noqa: E501

class VacancyWhen(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, planned=None):  # noqa: E501
        """VacancyWhen - a model defined in OpenAPI

        :param planned: The planned of this VacancyWhen.  # noqa: E501
        :type planned: DateSpan
        """
        self.openapi_types = {
            'planned': DateSpan
        }

        self.attribute_map = {
            'planned': 'planned'
        }

        self._planned = planned

    @classmethod
    def from_dict(cls, dikt) -> 'VacancyWhen':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Vacancy_when of this VacancyWhen.  # noqa: E501
        :rtype: VacancyWhen
        """
        return util.deserialize_model(dikt, cls)

    @property
    def planned(self):
        """Gets the planned of this VacancyWhen.


        :return: The planned of this VacancyWhen.
        :rtype: DateSpan
        """
        return self._planned

    @planned.setter
    def planned(self, planned):
        """Sets the planned of this VacancyWhen.


        :param planned: The planned of this VacancyWhen.
        :type planned: DateSpan
        """

        self._planned = planned
