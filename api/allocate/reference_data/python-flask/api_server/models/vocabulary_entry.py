# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api_server.models.base_model_ import Model
from api_server import util


class VocabularyEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code=None, title=None):  # noqa: E501
        """VocabularyEntry - a model defined in OpenAPI

        :param code: The code of this VocabularyEntry.  # noqa: E501
        :type code: str
        :param title: The title of this VocabularyEntry.  # noqa: E501
        :type title: str
        """
        self.openapi_types = {
            'code': str,
            'title': str
        }

        self.attribute_map = {
            'code': 'code',
            'title': 'title'
        }

        self._code = code
        self._title = title

    @classmethod
    def from_dict(cls, dikt) -> 'VocabularyEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VocabularyEntry of this VocabularyEntry.  # noqa: E501
        :rtype: VocabularyEntry
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this VocabularyEntry.

        Code for the element. Should be unique within the vocabulary  # noqa: E501

        :return: The code of this VocabularyEntry.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this VocabularyEntry.

        Code for the element. Should be unique within the vocabulary  # noqa: E501

        :param code: The code of this VocabularyEntry.
        :type code: str
        """
        if code is None:
            raise ValueError("Invalid value for `code`, must not be `None`")  # noqa: E501

        self._code = code

    @property
    def title(self):
        """Gets the title of this VocabularyEntry.

        Title for the element  # noqa: E501

        :return: The title of this VocabularyEntry.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this VocabularyEntry.

        Title for the element  # noqa: E501

        :param title: The title of this VocabularyEntry.
        :type title: str
        """

        self._title = title
