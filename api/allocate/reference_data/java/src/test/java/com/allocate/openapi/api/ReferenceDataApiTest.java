/*
 * Reference data and Mappings API
 *      ## API for accessing reference data and mapping information 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.allocate.openapi.api;

import com.allocate.openapi.ApiException;
import com.allocate.openapi.model.Vocabulary;
import com.allocate.openapi.model.VocabularyEntry;
import com.allocate.openapi.model.VocabularyType;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReferenceDataApi
 */
@Ignore
public class ReferenceDataApiTest {

    private final ReferenceDataApi api = new ReferenceDataApi();

    
    /**
     * 
     *
     * Create a new entry in a vocabulary
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createVocabularyEntryTest() throws ApiException {
        String id = null;
        VocabularyEntry vocabularyEntry = null;
        String response = api.createVocabularyEntry(id, vocabularyEntry);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete a vocabulary entry
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteVocabularyEntryTest() throws ApiException {
        String id = null;
        String elementId = null;
        api.deleteVocabularyEntry(id, elementId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Return a list of vocabularies types that you may query
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVocabulariesTest() throws ApiException {
        String vocabularyTypeId = null;
        String page = null;
        String pageSize = null;
        List<Vocabulary> response = api.getVocabularies(vocabularyTypeId, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Return a list of vocabularies that you may query
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVocabularyTest() throws ApiException {
        String id = null;
        Vocabulary response = api.getVocabulary(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Return the elements of a vocabulary
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVocabularyElementTest() throws ApiException {
        String id = null;
        String elementId = null;
        VocabularyEntry response = api.getVocabularyElement(id, elementId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Return the elements of a vocabulary
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVocabularyEntriesTest() throws ApiException {
        String id = null;
        List<VocabularyEntry> response = api.getVocabularyEntries(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Return a vocabulary type
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVocabularyTypeByIdTest() throws ApiException {
        String id = null;
        VocabularyType response = api.getVocabularyTypeById(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Return a list of vocabularies types that you may query
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVocabularyTypesTest() throws ApiException {
        List<VocabularyType> response = api.getVocabularyTypes();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Create a new entry in a vocabulary
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putVocabularyEntryTest() throws ApiException {
        String id = null;
        String elementId = null;
        VocabularyEntry vocabularyEntry = null;
        api.putVocabularyEntry(id, elementId, vocabularyEntry);

        // TODO: test validations
    }
    
}
