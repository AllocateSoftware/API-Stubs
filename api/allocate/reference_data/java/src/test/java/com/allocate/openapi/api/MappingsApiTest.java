/*
 * Reference data and Mappings API
 *      ## API for accessing reference data and mapping information 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.allocate.openapi.api;

import com.allocate.openapi.ApiException;
import com.allocate.openapi.model.Mapping;
import com.allocate.openapi.model.MappingSet;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MappingsApi
 */
@Ignore
public class MappingsApiTest {

    private final MappingsApi api = new MappingsApi();

    
    /**
     * 
     *
     * Create a new entry in a mapping set
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMappingTest() throws ApiException {
        String setId = null;
        Mapping mapping = null;
        String response = api.createMapping(setId, mapping);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete a vocabulary entry
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMappingTest() throws ApiException {
        String id = null;
        String mappingId = null;
        api.deleteMapping(id, mappingId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Return the mapping
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMappingTest() throws ApiException {
        String id = null;
        String mappingId = null;
        Mapping response = api.getMapping(id, mappingId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get a mapping set by ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMappingSetByIdTest() throws ApiException {
        String setId = null;
        MappingSet response = api.getMappingSetById(setId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Return a list of mapping sets that you may utilise
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMappingSetsTest() throws ApiException {
        List<MappingSet> response = api.getMappingSets();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Return the elements of a mapping set
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMappingsTest() throws ApiException {
        String setId = null;
        String fromCode = null;
        List<Mapping> response = api.getMappings(setId, fromCode);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Update a mapping
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putMappingTest() throws ApiException {
        String id = null;
        String mappingId = null;
        Mapping mapping = null;
        api.putMapping(id, mappingId, mapping);

        // TODO: test validations
    }
    
}
