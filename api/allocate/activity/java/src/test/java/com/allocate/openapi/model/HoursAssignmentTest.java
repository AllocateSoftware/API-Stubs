/*
 * Activity API
 *      ## API for querying worker activity.      This is an early availabilty API, and is subject to change. 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@allocatesoftware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.allocate.openapi.model;

import com.allocate.openapi.model.DateSpan;
import com.allocate.openapi.model.HoursAssignmentAssignment;
import com.allocate.openapi.model.HoursAssignmentCancellation;
import com.allocate.openapi.model.HoursAssignmentCostCentre;
import com.allocate.openapi.model.HoursAssignmentDuty;
import com.allocate.openapi.model.HoursAssignmentEmployeeType;
import com.allocate.openapi.model.HoursAssignmentFulfillment;
import com.allocate.openapi.model.HoursAssignmentLocation;
import com.allocate.openapi.model.HoursAssignmentOwningUnit;
import com.allocate.openapi.model.HoursAssignmentPerson;
import com.allocate.openapi.model.HoursAssignmentPost;
import com.allocate.openapi.model.HoursAssignmentPosting;
import com.allocate.openapi.model.HoursAssignmentRequirement;
import com.allocate.openapi.model.HoursAssignmentShift;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for HoursAssignment
 */
public class HoursAssignmentTest {
    private final HoursAssignment model = new HoursAssignment();

    /**
     * Model tests for HoursAssignment
     */
    @Test
    public void testHoursAssignment() {
        // TODO: test HoursAssignment
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'when'
     */
    @Test
    public void whenTest() {
        // TODO: test when
    }

    /**
     * Test the property 'actual'
     */
    @Test
    public void actualTest() {
        // TODO: test actual
    }

    /**
     * Test the property 'workTime'
     */
    @Test
    public void workTimeTest() {
        // TODO: test workTime
    }

    /**
     * Test the property 'contractedTime'
     */
    @Test
    public void contractedTimeTest() {
        // TODO: test contractedTime
    }

    /**
     * Test the property 'payState'
     */
    @Test
    public void payStateTest() {
        // TODO: test payState
    }

    /**
     * Test the property 'employeeType'
     */
    @Test
    public void employeeTypeTest() {
        // TODO: test employeeType
    }

    /**
     * Test the property 'person'
     */
    @Test
    public void personTest() {
        // TODO: test person
    }

    /**
     * Test the property 'assignment'
     */
    @Test
    public void assignmentTest() {
        // TODO: test assignment
    }

    /**
     * Test the property 'post'
     */
    @Test
    public void postTest() {
        // TODO: test post
    }

    /**
     * Test the property 'posting'
     */
    @Test
    public void postingTest() {
        // TODO: test posting
    }

    /**
     * Test the property 'cancellation'
     */
    @Test
    public void cancellationTest() {
        // TODO: test cancellation
    }

    /**
     * Test the property 'inCharge'
     */
    @Test
    public void inChargeTest() {
        // TODO: test inCharge
    }

    /**
     * Test the property 'shift'
     */
    @Test
    public void shiftTest() {
        // TODO: test shift
    }

    /**
     * Test the property 'duty'
     */
    @Test
    public void dutyTest() {
        // TODO: test duty
    }

    /**
     * Test the property 'fulfillment'
     */
    @Test
    public void fulfillmentTest() {
        // TODO: test fulfillment
    }

    /**
     * Test the property 'costCentre'
     */
    @Test
    public void costCentreTest() {
        // TODO: test costCentre
    }

    /**
     * Test the property 'owningUnit'
     */
    @Test
    public void owningUnitTest() {
        // TODO: test owningUnit
    }

    /**
     * Test the property 'resourcingUnit'
     */
    @Test
    public void resourcingUnitTest() {
        // TODO: test resourcingUnit
    }

    /**
     * Test the property 'requirement'
     */
    @Test
    public void requirementTest() {
        // TODO: test requirement
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'additionalDutyReason'
     */
    @Test
    public void additionalDutyReasonTest() {
        // TODO: test additionalDutyReason
    }

    /**
     * Test the property 'dutyHasWarnings'
     */
    @Test
    public void dutyHasWarningsTest() {
        // TODO: test dutyHasWarnings
    }

}
