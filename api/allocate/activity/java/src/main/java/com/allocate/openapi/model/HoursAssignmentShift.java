/*
 * Activity API
 *      ## API for querying worker activity.      This is an early availabilty API, and is subject to change. 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@allocatesoftware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.allocate.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * HoursAssignmentShift
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-09T13:33:21.258826Z[Europe/London]")
public class HoursAssignmentShift {
  /**
   *  Standard HealthRoster enumerations: *   Day *   Combined *   Night *   OnCall *   SleepIn *   StandBy *   Rest *   None *   ADO *   Evening *   Other *   PrivatePractice                 
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    DAY("day"),
    
    COMBINED("combined"),
    
    NIGHT("night"),
    
    ONCALL("onCall"),
    
    SLEEPIN("sleepIn"),
    
    STANDBY("standBy"),
    
    REST("rest"),
    
    NONE("none"),
    
    ADO("ADO"),
    
    EVENING("evening"),
    
    OTHER("other"),
    
    PRIVATEPRACTICE("PrivatePractice");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;


  public HoursAssignmentShift type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   *  Standard HealthRoster enumerations: *   Day *   Combined *   Night *   OnCall *   SleepIn *   StandBy *   Rest *   None *   ADO *   Evening *   Other *   PrivatePractice                 
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "day", value = " Standard HealthRoster enumerations: *   Day *   Combined *   Night *   OnCall *   SleepIn *   StandBy *   Rest *   None *   ADO *   Evening *   Other *   PrivatePractice                 ")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public HoursAssignmentShift name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "early", value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HoursAssignmentShift hoursAssignmentShift = (HoursAssignmentShift) o;
    return Objects.equals(this.type, hoursAssignmentShift.type) &&
        Objects.equals(this.name, hoursAssignmentShift.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HoursAssignmentShift {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

