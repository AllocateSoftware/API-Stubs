# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api_server.models.base_model_ import Model
from api_server.models.grade import Grade
from api_server.models.grade_type import GradeType
from api_server.models.grade_type_category import GradeTypeCategory
from api_server import util

from api_server.models.grade import Grade  # noqa: E501
from api_server.models.grade_type import GradeType  # noqa: E501
from api_server.models.grade_type_category import GradeTypeCategory  # noqa: E501

class HoursAssignmentPerson(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, staff_number=None, forenames=None, surname=None, mobile_number=None, grade=None, grade_type=None, grade_type_category=None, wte=None):  # noqa: E501
        """HoursAssignmentPerson - a model defined in OpenAPI

        :param staff_number: The staff_number of this HoursAssignmentPerson.  # noqa: E501
        :type staff_number: str
        :param forenames: The forenames of this HoursAssignmentPerson.  # noqa: E501
        :type forenames: str
        :param surname: The surname of this HoursAssignmentPerson.  # noqa: E501
        :type surname: str
        :param mobile_number: The mobile_number of this HoursAssignmentPerson.  # noqa: E501
        :type mobile_number: str
        :param grade: The grade of this HoursAssignmentPerson.  # noqa: E501
        :type grade: Grade
        :param grade_type: The grade_type of this HoursAssignmentPerson.  # noqa: E501
        :type grade_type: GradeType
        :param grade_type_category: The grade_type_category of this HoursAssignmentPerson.  # noqa: E501
        :type grade_type_category: GradeTypeCategory
        :param wte: The wte of this HoursAssignmentPerson.  # noqa: E501
        :type wte: float
        """
        self.openapi_types = {
            'staff_number': str,
            'forenames': str,
            'surname': str,
            'mobile_number': str,
            'grade': Grade,
            'grade_type': GradeType,
            'grade_type_category': GradeTypeCategory,
            'wte': float
        }

        self.attribute_map = {
            'staff_number': 'staffNumber',
            'forenames': 'forenames',
            'surname': 'surname',
            'mobile_number': 'mobileNumber',
            'grade': 'grade',
            'grade_type': 'gradeType',
            'grade_type_category': 'gradeTypeCategory',
            'wte': 'WTE'
        }

        self._staff_number = staff_number
        self._forenames = forenames
        self._surname = surname
        self._mobile_number = mobile_number
        self._grade = grade
        self._grade_type = grade_type
        self._grade_type_category = grade_type_category
        self._wte = wte

    @classmethod
    def from_dict(cls, dikt) -> 'HoursAssignmentPerson':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HoursAssignment_person of this HoursAssignmentPerson.  # noqa: E501
        :rtype: HoursAssignmentPerson
        """
        return util.deserialize_model(dikt, cls)

    @property
    def staff_number(self):
        """Gets the staff_number of this HoursAssignmentPerson.


        :return: The staff_number of this HoursAssignmentPerson.
        :rtype: str
        """
        return self._staff_number

    @staff_number.setter
    def staff_number(self, staff_number):
        """Sets the staff_number of this HoursAssignmentPerson.


        :param staff_number: The staff_number of this HoursAssignmentPerson.
        :type staff_number: str
        """

        self._staff_number = staff_number

    @property
    def forenames(self):
        """Gets the forenames of this HoursAssignmentPerson.

        List of forenames for the person  # noqa: E501

        :return: The forenames of this HoursAssignmentPerson.
        :rtype: str
        """
        return self._forenames

    @forenames.setter
    def forenames(self, forenames):
        """Sets the forenames of this HoursAssignmentPerson.

        List of forenames for the person  # noqa: E501

        :param forenames: The forenames of this HoursAssignmentPerson.
        :type forenames: str
        """

        self._forenames = forenames

    @property
    def surname(self):
        """Gets the surname of this HoursAssignmentPerson.

        Surname for the person  # noqa: E501

        :return: The surname of this HoursAssignmentPerson.
        :rtype: str
        """
        return self._surname

    @surname.setter
    def surname(self, surname):
        """Sets the surname of this HoursAssignmentPerson.

        Surname for the person  # noqa: E501

        :param surname: The surname of this HoursAssignmentPerson.
        :type surname: str
        """

        self._surname = surname

    @property
    def mobile_number(self):
        """Gets the mobile_number of this HoursAssignmentPerson.


        :return: The mobile_number of this HoursAssignmentPerson.
        :rtype: str
        """
        return self._mobile_number

    @mobile_number.setter
    def mobile_number(self, mobile_number):
        """Sets the mobile_number of this HoursAssignmentPerson.


        :param mobile_number: The mobile_number of this HoursAssignmentPerson.
        :type mobile_number: str
        """

        self._mobile_number = mobile_number

    @property
    def grade(self):
        """Gets the grade of this HoursAssignmentPerson.


        :return: The grade of this HoursAssignmentPerson.
        :rtype: Grade
        """
        return self._grade

    @grade.setter
    def grade(self, grade):
        """Sets the grade of this HoursAssignmentPerson.


        :param grade: The grade of this HoursAssignmentPerson.
        :type grade: Grade
        """

        self._grade = grade

    @property
    def grade_type(self):
        """Gets the grade_type of this HoursAssignmentPerson.


        :return: The grade_type of this HoursAssignmentPerson.
        :rtype: GradeType
        """
        return self._grade_type

    @grade_type.setter
    def grade_type(self, grade_type):
        """Sets the grade_type of this HoursAssignmentPerson.


        :param grade_type: The grade_type of this HoursAssignmentPerson.
        :type grade_type: GradeType
        """

        self._grade_type = grade_type

    @property
    def grade_type_category(self):
        """Gets the grade_type_category of this HoursAssignmentPerson.


        :return: The grade_type_category of this HoursAssignmentPerson.
        :rtype: GradeTypeCategory
        """
        return self._grade_type_category

    @grade_type_category.setter
    def grade_type_category(self, grade_type_category):
        """Sets the grade_type_category of this HoursAssignmentPerson.


        :param grade_type_category: The grade_type_category of this HoursAssignmentPerson.
        :type grade_type_category: GradeTypeCategory
        """

        self._grade_type_category = grade_type_category

    @property
    def wte(self):
        """Gets the wte of this HoursAssignmentPerson.

        Whole time Equivalent – this is the person’s contracted hours divided by the person’s default grade type value for WTE (if the grade type has no value then use grade type category if neither have a value use system default setting). e.g. 37.5 / (2250/60) = 1.00 NOTE if the grade type default wte is not set this will not be returned   # noqa: E501

        :return: The wte of this HoursAssignmentPerson.
        :rtype: float
        """
        return self._wte

    @wte.setter
    def wte(self, wte):
        """Sets the wte of this HoursAssignmentPerson.

        Whole time Equivalent – this is the person’s contracted hours divided by the person’s default grade type value for WTE (if the grade type has no value then use grade type category if neither have a value use system default setting). e.g. 37.5 / (2250/60) = 1.00 NOTE if the grade type default wte is not set this will not be returned   # noqa: E501

        :param wte: The wte of this HoursAssignmentPerson.
        :type wte: float
        """

        self._wte = wte
