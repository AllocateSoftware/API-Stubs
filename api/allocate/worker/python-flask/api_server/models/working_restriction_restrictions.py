# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api_server.models.base_model_ import Model
from api_server import util


class WorkingRestrictionRestrictions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, effective_from=None, days_per_week=None, max_days_per_week=None, max_shifts_per_week=None, max_consecutive_days=None, max_consecutive_days_requested=None, max_work_time_per_day=None, max_duration_per_shift=None, additional_hours_per_week=None, max_overtime_per_day=None, max_overtime_per_week=None, max_overtime_per_calendar_month=None, wtd_day_start=None, wtd_week_day_start=None, wtd_week_time_start=None, min_break_between_shifts=None, notes=None):  # noqa: E501
        """WorkingRestrictionRestrictions - a model defined in OpenAPI

        :param effective_from: The effective_from of this WorkingRestrictionRestrictions.  # noqa: E501
        :type effective_from: str
        :param days_per_week: The days_per_week of this WorkingRestrictionRestrictions.  # noqa: E501
        :type days_per_week: str
        :param max_days_per_week: The max_days_per_week of this WorkingRestrictionRestrictions.  # noqa: E501
        :type max_days_per_week: str
        :param max_shifts_per_week: The max_shifts_per_week of this WorkingRestrictionRestrictions.  # noqa: E501
        :type max_shifts_per_week: str
        :param max_consecutive_days: The max_consecutive_days of this WorkingRestrictionRestrictions.  # noqa: E501
        :type max_consecutive_days: str
        :param max_consecutive_days_requested: The max_consecutive_days_requested of this WorkingRestrictionRestrictions.  # noqa: E501
        :type max_consecutive_days_requested: str
        :param max_work_time_per_day: The max_work_time_per_day of this WorkingRestrictionRestrictions.  # noqa: E501
        :type max_work_time_per_day: str
        :param max_duration_per_shift: The max_duration_per_shift of this WorkingRestrictionRestrictions.  # noqa: E501
        :type max_duration_per_shift: str
        :param additional_hours_per_week: The additional_hours_per_week of this WorkingRestrictionRestrictions.  # noqa: E501
        :type additional_hours_per_week: str
        :param max_overtime_per_day: The max_overtime_per_day of this WorkingRestrictionRestrictions.  # noqa: E501
        :type max_overtime_per_day: str
        :param max_overtime_per_week: The max_overtime_per_week of this WorkingRestrictionRestrictions.  # noqa: E501
        :type max_overtime_per_week: str
        :param max_overtime_per_calendar_month: The max_overtime_per_calendar_month of this WorkingRestrictionRestrictions.  # noqa: E501
        :type max_overtime_per_calendar_month: str
        :param wtd_day_start: The wtd_day_start of this WorkingRestrictionRestrictions.  # noqa: E501
        :type wtd_day_start: str
        :param wtd_week_day_start: The wtd_week_day_start of this WorkingRestrictionRestrictions.  # noqa: E501
        :type wtd_week_day_start: str
        :param wtd_week_time_start: The wtd_week_time_start of this WorkingRestrictionRestrictions.  # noqa: E501
        :type wtd_week_time_start: str
        :param min_break_between_shifts: The min_break_between_shifts of this WorkingRestrictionRestrictions.  # noqa: E501
        :type min_break_between_shifts: float
        :param notes: The notes of this WorkingRestrictionRestrictions.  # noqa: E501
        :type notes: str
        """
        self.openapi_types = {
            'effective_from': str,
            'days_per_week': str,
            'max_days_per_week': str,
            'max_shifts_per_week': str,
            'max_consecutive_days': str,
            'max_consecutive_days_requested': str,
            'max_work_time_per_day': str,
            'max_duration_per_shift': str,
            'additional_hours_per_week': str,
            'max_overtime_per_day': str,
            'max_overtime_per_week': str,
            'max_overtime_per_calendar_month': str,
            'wtd_day_start': str,
            'wtd_week_day_start': str,
            'wtd_week_time_start': str,
            'min_break_between_shifts': float,
            'notes': str
        }

        self.attribute_map = {
            'effective_from': 'effectiveFrom',
            'days_per_week': 'daysPerWeek',
            'max_days_per_week': 'maxDaysPerWeek',
            'max_shifts_per_week': 'maxShiftsPerWeek',
            'max_consecutive_days': 'maxConsecutiveDays',
            'max_consecutive_days_requested': 'maxConsecutiveDaysRequested',
            'max_work_time_per_day': 'maxWorkTimePerDay',
            'max_duration_per_shift': 'maxDurationPerShift',
            'additional_hours_per_week': 'additionalHoursPerWeek',
            'max_overtime_per_day': 'maxOvertimePerDay',
            'max_overtime_per_week': 'maxOvertimePerWeek',
            'max_overtime_per_calendar_month': 'maxOvertimePerCalendarMonth',
            'wtd_day_start': 'wtdDayStart',
            'wtd_week_day_start': 'wtdWeekDayStart',
            'wtd_week_time_start': 'wtdWeekTimeStart',
            'min_break_between_shifts': 'minBreakBetweenShifts',
            'notes': 'notes'
        }

        self._effective_from = effective_from
        self._days_per_week = days_per_week
        self._max_days_per_week = max_days_per_week
        self._max_shifts_per_week = max_shifts_per_week
        self._max_consecutive_days = max_consecutive_days
        self._max_consecutive_days_requested = max_consecutive_days_requested
        self._max_work_time_per_day = max_work_time_per_day
        self._max_duration_per_shift = max_duration_per_shift
        self._additional_hours_per_week = additional_hours_per_week
        self._max_overtime_per_day = max_overtime_per_day
        self._max_overtime_per_week = max_overtime_per_week
        self._max_overtime_per_calendar_month = max_overtime_per_calendar_month
        self._wtd_day_start = wtd_day_start
        self._wtd_week_day_start = wtd_week_day_start
        self._wtd_week_time_start = wtd_week_time_start
        self._min_break_between_shifts = min_break_between_shifts
        self._notes = notes

    @classmethod
    def from_dict(cls, dikt) -> 'WorkingRestrictionRestrictions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WorkingRestriction_restrictions of this WorkingRestrictionRestrictions.  # noqa: E501
        :rtype: WorkingRestrictionRestrictions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def effective_from(self):
        """Gets the effective_from of this WorkingRestrictionRestrictions.


        :return: The effective_from of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._effective_from

    @effective_from.setter
    def effective_from(self, effective_from):
        """Sets the effective_from of this WorkingRestrictionRestrictions.


        :param effective_from: The effective_from of this WorkingRestrictionRestrictions.
        :type effective_from: str
        """

        self._effective_from = effective_from

    @property
    def days_per_week(self):
        """Gets the days_per_week of this WorkingRestrictionRestrictions.


        :return: The days_per_week of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._days_per_week

    @days_per_week.setter
    def days_per_week(self, days_per_week):
        """Sets the days_per_week of this WorkingRestrictionRestrictions.


        :param days_per_week: The days_per_week of this WorkingRestrictionRestrictions.
        :type days_per_week: str
        """

        self._days_per_week = days_per_week

    @property
    def max_days_per_week(self):
        """Gets the max_days_per_week of this WorkingRestrictionRestrictions.


        :return: The max_days_per_week of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._max_days_per_week

    @max_days_per_week.setter
    def max_days_per_week(self, max_days_per_week):
        """Sets the max_days_per_week of this WorkingRestrictionRestrictions.


        :param max_days_per_week: The max_days_per_week of this WorkingRestrictionRestrictions.
        :type max_days_per_week: str
        """

        self._max_days_per_week = max_days_per_week

    @property
    def max_shifts_per_week(self):
        """Gets the max_shifts_per_week of this WorkingRestrictionRestrictions.


        :return: The max_shifts_per_week of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._max_shifts_per_week

    @max_shifts_per_week.setter
    def max_shifts_per_week(self, max_shifts_per_week):
        """Sets the max_shifts_per_week of this WorkingRestrictionRestrictions.


        :param max_shifts_per_week: The max_shifts_per_week of this WorkingRestrictionRestrictions.
        :type max_shifts_per_week: str
        """

        self._max_shifts_per_week = max_shifts_per_week

    @property
    def max_consecutive_days(self):
        """Gets the max_consecutive_days of this WorkingRestrictionRestrictions.


        :return: The max_consecutive_days of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._max_consecutive_days

    @max_consecutive_days.setter
    def max_consecutive_days(self, max_consecutive_days):
        """Sets the max_consecutive_days of this WorkingRestrictionRestrictions.


        :param max_consecutive_days: The max_consecutive_days of this WorkingRestrictionRestrictions.
        :type max_consecutive_days: str
        """

        self._max_consecutive_days = max_consecutive_days

    @property
    def max_consecutive_days_requested(self):
        """Gets the max_consecutive_days_requested of this WorkingRestrictionRestrictions.


        :return: The max_consecutive_days_requested of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._max_consecutive_days_requested

    @max_consecutive_days_requested.setter
    def max_consecutive_days_requested(self, max_consecutive_days_requested):
        """Sets the max_consecutive_days_requested of this WorkingRestrictionRestrictions.


        :param max_consecutive_days_requested: The max_consecutive_days_requested of this WorkingRestrictionRestrictions.
        :type max_consecutive_days_requested: str
        """

        self._max_consecutive_days_requested = max_consecutive_days_requested

    @property
    def max_work_time_per_day(self):
        """Gets the max_work_time_per_day of this WorkingRestrictionRestrictions.


        :return: The max_work_time_per_day of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._max_work_time_per_day

    @max_work_time_per_day.setter
    def max_work_time_per_day(self, max_work_time_per_day):
        """Sets the max_work_time_per_day of this WorkingRestrictionRestrictions.


        :param max_work_time_per_day: The max_work_time_per_day of this WorkingRestrictionRestrictions.
        :type max_work_time_per_day: str
        """

        self._max_work_time_per_day = max_work_time_per_day

    @property
    def max_duration_per_shift(self):
        """Gets the max_duration_per_shift of this WorkingRestrictionRestrictions.


        :return: The max_duration_per_shift of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._max_duration_per_shift

    @max_duration_per_shift.setter
    def max_duration_per_shift(self, max_duration_per_shift):
        """Sets the max_duration_per_shift of this WorkingRestrictionRestrictions.


        :param max_duration_per_shift: The max_duration_per_shift of this WorkingRestrictionRestrictions.
        :type max_duration_per_shift: str
        """

        self._max_duration_per_shift = max_duration_per_shift

    @property
    def additional_hours_per_week(self):
        """Gets the additional_hours_per_week of this WorkingRestrictionRestrictions.


        :return: The additional_hours_per_week of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._additional_hours_per_week

    @additional_hours_per_week.setter
    def additional_hours_per_week(self, additional_hours_per_week):
        """Sets the additional_hours_per_week of this WorkingRestrictionRestrictions.


        :param additional_hours_per_week: The additional_hours_per_week of this WorkingRestrictionRestrictions.
        :type additional_hours_per_week: str
        """

        self._additional_hours_per_week = additional_hours_per_week

    @property
    def max_overtime_per_day(self):
        """Gets the max_overtime_per_day of this WorkingRestrictionRestrictions.


        :return: The max_overtime_per_day of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._max_overtime_per_day

    @max_overtime_per_day.setter
    def max_overtime_per_day(self, max_overtime_per_day):
        """Sets the max_overtime_per_day of this WorkingRestrictionRestrictions.


        :param max_overtime_per_day: The max_overtime_per_day of this WorkingRestrictionRestrictions.
        :type max_overtime_per_day: str
        """

        self._max_overtime_per_day = max_overtime_per_day

    @property
    def max_overtime_per_week(self):
        """Gets the max_overtime_per_week of this WorkingRestrictionRestrictions.


        :return: The max_overtime_per_week of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._max_overtime_per_week

    @max_overtime_per_week.setter
    def max_overtime_per_week(self, max_overtime_per_week):
        """Sets the max_overtime_per_week of this WorkingRestrictionRestrictions.


        :param max_overtime_per_week: The max_overtime_per_week of this WorkingRestrictionRestrictions.
        :type max_overtime_per_week: str
        """

        self._max_overtime_per_week = max_overtime_per_week

    @property
    def max_overtime_per_calendar_month(self):
        """Gets the max_overtime_per_calendar_month of this WorkingRestrictionRestrictions.


        :return: The max_overtime_per_calendar_month of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._max_overtime_per_calendar_month

    @max_overtime_per_calendar_month.setter
    def max_overtime_per_calendar_month(self, max_overtime_per_calendar_month):
        """Sets the max_overtime_per_calendar_month of this WorkingRestrictionRestrictions.


        :param max_overtime_per_calendar_month: The max_overtime_per_calendar_month of this WorkingRestrictionRestrictions.
        :type max_overtime_per_calendar_month: str
        """

        self._max_overtime_per_calendar_month = max_overtime_per_calendar_month

    @property
    def wtd_day_start(self):
        """Gets the wtd_day_start of this WorkingRestrictionRestrictions.


        :return: The wtd_day_start of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._wtd_day_start

    @wtd_day_start.setter
    def wtd_day_start(self, wtd_day_start):
        """Sets the wtd_day_start of this WorkingRestrictionRestrictions.


        :param wtd_day_start: The wtd_day_start of this WorkingRestrictionRestrictions.
        :type wtd_day_start: str
        """

        self._wtd_day_start = wtd_day_start

    @property
    def wtd_week_day_start(self):
        """Gets the wtd_week_day_start of this WorkingRestrictionRestrictions.


        :return: The wtd_week_day_start of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._wtd_week_day_start

    @wtd_week_day_start.setter
    def wtd_week_day_start(self, wtd_week_day_start):
        """Sets the wtd_week_day_start of this WorkingRestrictionRestrictions.


        :param wtd_week_day_start: The wtd_week_day_start of this WorkingRestrictionRestrictions.
        :type wtd_week_day_start: str
        """

        self._wtd_week_day_start = wtd_week_day_start

    @property
    def wtd_week_time_start(self):
        """Gets the wtd_week_time_start of this WorkingRestrictionRestrictions.


        :return: The wtd_week_time_start of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._wtd_week_time_start

    @wtd_week_time_start.setter
    def wtd_week_time_start(self, wtd_week_time_start):
        """Sets the wtd_week_time_start of this WorkingRestrictionRestrictions.


        :param wtd_week_time_start: The wtd_week_time_start of this WorkingRestrictionRestrictions.
        :type wtd_week_time_start: str
        """

        self._wtd_week_time_start = wtd_week_time_start

    @property
    def min_break_between_shifts(self):
        """Gets the min_break_between_shifts of this WorkingRestrictionRestrictions.


        :return: The min_break_between_shifts of this WorkingRestrictionRestrictions.
        :rtype: float
        """
        return self._min_break_between_shifts

    @min_break_between_shifts.setter
    def min_break_between_shifts(self, min_break_between_shifts):
        """Sets the min_break_between_shifts of this WorkingRestrictionRestrictions.


        :param min_break_between_shifts: The min_break_between_shifts of this WorkingRestrictionRestrictions.
        :type min_break_between_shifts: float
        """

        self._min_break_between_shifts = min_break_between_shifts

    @property
    def notes(self):
        """Gets the notes of this WorkingRestrictionRestrictions.


        :return: The notes of this WorkingRestrictionRestrictions.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this WorkingRestrictionRestrictions.


        :param notes: The notes of this WorkingRestrictionRestrictions.
        :type notes: str
        """

        self._notes = notes
