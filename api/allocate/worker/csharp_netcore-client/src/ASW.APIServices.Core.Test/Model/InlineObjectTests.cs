/* 
 * Worker API and Events
 *
 *      ## API and events for providing workers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@allocatesoftware.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ASW.APIServices.Core.Api;
using ASW.APIServices.Core.Model;
using ASW.APIServices.Core.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ASW.APIServices.Core.Test
{
    /// <summary>
    ///  Class for testing InlineObject
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class InlineObjectTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for InlineObject
        //private InlineObject instance;

        public InlineObjectTests()
        {
            // TODO uncomment below to create an instance of InlineObject
            //instance = new InlineObject();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InlineObject
        /// </summary>
        [Fact]
        public void InlineObjectInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" InlineObject
            //Assert.IsInstanceOfType<InlineObject> (instance, "variable 'instance' is a InlineObject");
        }


        /// <summary>
        /// Test the property 'TrustCode'
        /// </summary>
        [Fact]
        public void TrustCodeTest()
        {
            // TODO unit test for the property 'TrustCode'
        }
        /// <summary>
        /// Test the property 'EngagementRoute'
        /// </summary>
        [Fact]
        public void EngagementRouteTest()
        {
            // TODO unit test for the property 'EngagementRoute'
        }

    }

}
